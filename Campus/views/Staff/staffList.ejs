<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Staff List</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary-blue: #1e40af;
            --primary-blue-dark: #1e3a8a;
            --text-dark: #1e293b;
            --text-light: #475569;
            --border-color: #e2e8f0;
            --background-light: #f8fafc;
            --background-white: #ffffff;
        }

        body {
            font-family: 'Inter', system-ui, sans-serif;
            background-color: var(--background-light);
            margin: 0;
            padding: 40px 20px;
            color: var(--text-dark);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        
        h1 {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-blue);
            text-align: center;
            margin-bottom: 24px;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            background-color: var(--background-white);
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            border: 1px solid var(--border-color);
            overflow: hidden;
        }
        
        .table-actions {
            padding: 20px 24px;
            border-bottom: 1px solid var(--border-color);
            text-align: right;
        }

        /* General Button Styles */
        .btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 8px 16px;
            border: 1px solid transparent;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.875rem;
            font-weight: 600;
            transition: all 0.2s ease-in-out;
            text-decoration: none;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Primary Button (Attendance) */
        .btn-primary {
            background-color: var(--primary-blue);
            color: var(--background-white);
        }

        .btn-primary:hover {
            background-color: var(--primary-blue-dark);
        }

        /* Secondary Button (Register Face) */
        .btn-secondary {
            background-color: var(--background-white);
            color: var(--text-light);
            border-color: var(--border-color);
            box-shadow: 0 1px 2px rgba(0,0,0,0.05);
        }
        
        .btn-secondary:hover {
            border-color: #cdd5e0;
            color: var(--text-dark);
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 16px 24px;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
        }
        
        tbody tr:last-child td {
            border-bottom: none;
        }

        th {
            font-size: 0.75rem;
            font-weight: 600;
            color: var(--text-light);
            text-transform: uppercase;
            letter-spacing: 0.05em;
            background-color: var(--background-light);
        }
        
        td {
            font-size: 0.875rem;
            color: var(--text-dark);
        }

        td:first-child {
            font-weight: 500;
        }
        
        td:nth-child(2) {
             color: var(--text-light);
        }

        tbody tr:hover {
            background-color: #f9fafb;
        }

      #errorPopupContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            background: rgba(0, 0, 0, 0.4);
            font-family: 'Montserrat', sans-serif;
        }

        #errorPopupContainer * {
            box-sizing: border-box;
            font-family: inherit;
            margin: 0;
            padding: 0;
        }

        #errorPopupBox {
            max-width: 400px;
            width: 90%;
            padding: 30px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        #errorPopupBox h1 {
            font-size: 3rem;
            font-weight: 700;
            color: #e74c3c;
        }

        #errorPopupBox h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 10px 0;
        }

        #errorMessage {
            font-size: 1rem;
            color: #666;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border-left: 4px solid #e74c3c;
            text-align: left;
            word-wrap: break-word;
        }

        #closeErrorPopup {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 24px;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: pointer;
        }

        #closeErrorPopup:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

            #flashMessageContainer {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 9998;
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 420px;
            padding: 0 1rem;
            pointer-events: none;
        }

        .flash-message {
            padding: 1rem 1.25rem;
            margin-bottom: 0.75rem;
            border-radius: 8px;
            font-weight: 600;
            width: 100%;
            text-align: center;
            pointer-events: all;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: fadeIn 0.4s ease;
        }

        .flash-success {
            background-color: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
        }

        .flash-error {
            background-color: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
  </style>
</head>
<body>
  <div id="flashMessageContainer"></div>
<h1>Staff List</h1>

<div class="container">
    <div class="table-actions">
        <button class="btn btn-primary" id="takeAttendanceBtn">Take Attendance</button>
    </div>

    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Department</th>
                <th>Phone</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% staffList.forEach(staff => { %>
                <tr>
                    <td><%= staff.name %></td>
                    <td><%= staff.email %></td>
                    <td><%= staff.department %></td>
                    <td><%= staff.phone %></td>
                    <td>
                        <button 
                            class="btn btn-secondary" 
                            data-id="<%= staff._id %>" 
                            data-name="<%= staff.name %>" 
                            data-email="<%= staff.email %>">
                            Register Face
                        </button>
                    </td>
                </tr>
            <% }) %>
        </tbody>
    </table>
</div>

<script>
    window.onload = async function() {
            const token = localStorage.getItem('token');
            try {
                    const res = await fetch('/Auth/verify-token', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        }
                    }); 
                    if (!res.ok){

                        const contentType = res.headers.get('Content-Type') || '';

                    if (contentType.includes('text/html')) {
                        const html = await res.text();
                        const tempDiv = document.createElement('div');
                        tempDiv.innerHTML = html;

                        const popup = tempDiv.querySelector('#errorPopupContainer');
                        const scripts = tempDiv.querySelectorAll('script');

                        if (popup) {
                        document.body.prepend(popup);
                        scripts.forEach((script) => {
                            const newScript = document.createElement('script');
                            if (script.src) newScript.src = script.src;
                            else newScript.textContent = script.textContent;
                            document.body.appendChild(newScript);
                        });
                        } else {
                        showFlashMessage('error', 'An unknown error occurred.');
                        }

                        // Add redirect after short delay for session errors
                        setTimeout(() => {
                        window.location.href = '/Staff/login';
                        }, 1500);
                    } else {
                        showFlashMessage('error', 'Server error: unexpected content type.');

                        // Optional: Redirect for other cases too
                        setTimeout(() => {
                        window.location.href = '/Staff/login';
                        }, 1500);
                    }
                    }
                    } catch (err) {
                    showFlashMessage('error', 'An unknown error occurred.');
                    }
                        try {
                        const token = localStorage.getItem('token');
                        if (!token) {
                        console.error('No token found');
                        return;
                        }
                        // console.log('Token:', token);
                        // Decode JWT to get staffId
                        const payload = JSON.parse(atob(token.split('.')[1]));
                        const staffId = payload._id;
                        
                        const res = await fetch('/Manage/get-permissions', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ staffId })
                        });

                        if (!res.ok) {
                        handleServerError(res);
                        return;
                        }

                        const data = await res.json();
                        const permissions = data.permissions || [];
                        // console.log('Permissions:', permissions);
                        // Hide all menu items not in permissions
                        
                        if (!permissions.includes('manage_staff_attendance')) {
                            showFlashMessage('error', 'You do not have permission to access this page.');
                            setTimeout(() => {
                                window.location.href = '/Staff/dashboard';
                            }, 1500);
                        }
                    } catch (err) {
                        console.error('Error fetching permissions:', err);
                    }
                }
    
    async function handleServerError(res) {
        const contentType = res.headers.get('Content-Type') || '';

        if (contentType.includes('text/html')) {
        const html = await res.text();
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = html;

        const popup = tempDiv.querySelector('#errorPopupContainer');
        const scripts = tempDiv.querySelectorAll('script');

        if (popup) {
            document.body.prepend(popup);
            scripts.forEach((script) => {
            const newScript = document.createElement('script');
            if (script.src) newScript.src = script.src;
            else newScript.textContent = script.textContent;
            document.body.appendChild(newScript);
            });
        } else {
            showFlashMessage('error', 'An unknown error occurred.');
        }
        } else {
        showFlashMessage('error', 'Server error: unexpected content type.');
        }
    } 

    function showFlashMessage(type, message, duration = 4000) {
        const container = document.getElementById('flashMessageContainer');
        const msg = document.createElement('div');
        msg.classList.add('flash-message');
        msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
        msg.textContent = message;

        container.appendChild(msg);

        setTimeout(() => {
        msg.style.opacity = '0';
        msg.style.transform = 'translateY(-10px)';
        setTimeout(() => msg.remove(), 500);
        }, duration);
    } 
document.addEventListener('DOMContentLoaded', () => {
    const registerButtons = document.querySelectorAll('.btn-secondary');
    const takeAttendanceBtn = document.getElementById('takeAttendanceBtn');

    // Register Face per staff
    registerButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            const staffId = btn.getAttribute('data-id');
            const name = btn.getAttribute('data-name');
            const email = btn.getAttribute('data-email');
            
            // Redirect to registration page
            window.location.href = `/Face/register?staffId=${encodeURIComponent(staffId)}&name=${encodeURIComponent(name)}&email=${encodeURIComponent(email)}`;
        });
    });

    // Take Attendance
    if (takeAttendanceBtn) {
        takeAttendanceBtn.addEventListener('click', () => {
            // Redirect to attendance page
            window.location.href = '/Face/faceAttendance';
        });
    }
});
</script>
</body>
</html>