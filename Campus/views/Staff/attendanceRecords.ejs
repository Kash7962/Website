<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>My Attendance</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-blue: #1e40af;
      --text-dark: #1e293b;
      --text-light: #475569;
      --border-color: #e2e8f0;
      --background-light: #f8fafc;
      --background-white: #ffffff;
    }
    body {
      font-family: 'Inter', system-ui, sans-serif;
      background: var(--background-light);
      margin: 0;
      padding: 40px 20px;
      color: var(--text-dark);
    }
    h2 {
      font-size: 2rem;
      font-weight: 700;
      color: var(--primary-blue);
      text-align: center;
      margin-bottom: 24px;
    }
    .container {
      max-width: 900px;
      margin: 0 auto;
      background: var(--background-white);
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      border: 1px solid var(--border-color);
      padding: 24px;
    }
    #status {
      text-align: center;
      font-weight: 600;
      color: var(--text-light);
      margin-bottom: 24px;
    }
    table {
      width: 100%;
      border-collapse: collapse;
    }
    thead {
      background: var(--background-light);
      border-bottom: 1px solid var(--border-color);
    }
    th, td {
      padding: 16px;
      text-align: left;
      border-bottom: 1px solid var(--border-color);
      font-size: 0.875rem;
    }
    th {
      font-weight: 600;
      color: var(--text-light);
      text-transform: uppercase;
      letter-spacing: 0.05em;
      font-size: 0.75rem;
    }
    tbody tr:hover {
      background-color: #f9fafb;
    }
    /* Center specific columns */
    th:nth-child(2), td:nth-child(2),
    th:nth-child(3), td:nth-child(3),
    th:nth-child(4), td:nth-child(4) {
      text-align: center;
    }
    .btn {
      display: block;
      margin: 0 auto 20px;
      padding: 10px 16px;
      background: var(--primary-blue);
      color: white;
      font-weight: 600;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .btn:hover {
      background: #1e3a8a;
    }
   #errorPopupContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            background: rgba(0, 0, 0, 0.4);
            font-family: 'Montserrat', sans-serif;
        }

        #errorPopupContainer * {
            box-sizing: border-box;
            font-family: inherit;
            margin: 0;
            padding: 0;
        }

        #errorPopupBox {
            max-width: 400px;
            width: 90%;
            padding: 30px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        #errorPopupBox h1 {
            font-size: 3rem;
            font-weight: 700;
            color: #e74c3c;
        }

        #errorPopupBox h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 10px 0;
        }

        #errorMessage {
            font-size: 1rem;
            color: #666;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border-left: 4px solid #e74c3c;
            text-align: left;
            word-wrap: break-word;
        }

        #closeErrorPopup {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 24px;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: pointer;
        }

        #closeErrorPopup:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

            #flashMessageContainer {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 9998;
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 420px;
            padding: 0 1rem;
            pointer-events: none;
        }

        .flash-message {
            padding: 1rem 1.25rem;
            margin-bottom: 0.75rem;
            border-radius: 8px;
            font-weight: 600;
            width: 100%;
            text-align: center;
            pointer-events: all;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: fadeIn 0.4s ease;
        }

        .flash-success {
            background-color: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
        }

        .flash-error {
            background-color: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
    </style>
</head>
<body>
    <div id="flashMessageContainer"></div>
    <h2>📅 My Attendance Records</h2>

  <button class="btn" id="loadAttendanceBtn">Load My Attendance</button>

  <div id="attendanceSection" class="container" style="display:none;">
    <p id="status">Loading attendance...</p>
    <table id="attendanceTable">
      <thead>
        <tr>
          <th>Date</th>
          <th>Status</th>
          <th>Check-in</th>
          <th>Check-out</th>
          <th>Marked By</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <script>
    window.onload = async function() {
            const token = localStorage.getItem('token');
            try {
                    const res = await fetch('/Auth/verify-token', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        }
                    }); 
                    if (!res.ok){

                        const contentType = res.headers.get('Content-Type') || '';

                    if (contentType.includes('text/html')) {
                        const html = await res.text();
                        const tempDiv = document.createElement('div');
                        tempDiv.innerHTML = html;

                        const popup = tempDiv.querySelector('#errorPopupContainer');
                        const scripts = tempDiv.querySelectorAll('script');

                        if (popup) {
                        document.body.prepend(popup);
                        scripts.forEach((script) => {
                            const newScript = document.createElement('script');
                            if (script.src) newScript.src = script.src;
                            else newScript.textContent = script.textContent;
                            document.body.appendChild(newScript);
                        });
                        } else {
                        showFlashMessage('error', 'An unknown error occurred.');
                        }

                        // Add redirect after short delay for session errors
                        setTimeout(() => {
                        window.location.href = '/Staff/login';
                        }, 1500);
                    } else {
                        showFlashMessage('error', 'Server error: unexpected content type.');

                        // Optional: Redirect for other cases too
                        setTimeout(() => {
                        window.location.href = '/Staff/login';
                        }, 1500);
                    }
                    }
                    } catch (err) {
                    showFlashMessage('error', 'An unknown error occurred.');
                    }
                }

    document.getElementById("loadAttendanceBtn").addEventListener("click", async () => {
      const section = document.getElementById("attendanceSection");
      const statusEl = document.getElementById("status");
      const tbody = document.querySelector("#attendanceTable tbody");

      section.style.display = "block"; // show container
      statusEl.innerText = "Loading attendance...";
      tbody.innerHTML = "";

      try {
        const token = localStorage.getItem("token");
        if (!token) {
          statusEl.innerText = "❌ No token found. Please log in again.";
          return;
        }

        const payload = JSON.parse(atob(token.split(".")[1]));
        const staffId = payload._id;

        const res = await fetch(`/Manage/attendance/get/${staffId}`, {
          headers: { Authorization: `Bearer ${token}` }
        });

        const data = await res.json();

        if (!res.ok) {
         handleServerError(res);
          return;
        }

        if (data.length === 0) {
          statusEl.innerText = "ℹ️ No attendance records found.";
          return;
        }

        statusEl.innerText = "";

        data.forEach(record => {
          const row = document.createElement("tr");
          row.innerHTML = `
            <td>${new Date(record.date).toLocaleDateString()}</td>
            <td>${record.status}</td>
            <td>${record.checkInTime ? new Date(record.checkInTime).toLocaleTimeString() : '-'}</td>
            <td>${record.checkOutTime ? new Date(record.checkOutTime).toLocaleTimeString() : '-'}</td>
            <td>${record.markedBy}</td>
          `;
          tbody.appendChild(row);
        });

      } catch (err) {
        console.error(err);
        statusEl.innerText = "❌ Error loading attendance.";
      }
    });

    async function handleServerError(res) {
        const contentType = res.headers.get('Content-Type') || '';

        if (contentType.includes('text/html')) {
        const html = await res.text();
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = html;

        const popup = tempDiv.querySelector('#errorPopupContainer');
        const scripts = tempDiv.querySelectorAll('script');

        if (popup) {
            document.body.prepend(popup);
            scripts.forEach((script) => {
            const newScript = document.createElement('script');
            if (script.src) newScript.src = script.src;
            else newScript.textContent = script.textContent;
            document.body.appendChild(newScript);
            });
        } else {
            showFlashMessage('error', 'An unknown error occurred.');
        }
        } else {
        showFlashMessage('error', 'Server error: unexpected content type.');
        }
    } 

    function showFlashMessage(type, message, duration = 4000) {
        const container = document.getElementById('flashMessageContainer');
        const msg = document.createElement('div');
        msg.classList.add('flash-message');
        msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
        msg.textContent = message;

        container.appendChild(msg);

        setTimeout(() => {
        msg.style.opacity = '0';
        msg.style.transform = 'translateY(-10px)';
        setTimeout(() => msg.remove(), 500);
        }, duration);
    } 
  </script>
</body>
</html>
