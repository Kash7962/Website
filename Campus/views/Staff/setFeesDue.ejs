<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Set Fees Due — <%= student.firstName %> <%= student.lastName || '' %></title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet" />
  <style>
    body {
      font-family: 'Inter', system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
      background: #f7fafc; color: #111827; padding: 20px;
      max-width: 600px; margin: auto;
    }
    h1 {
      font-weight: 600;
      margin-bottom: 18px;
    }
    form {
      background: white;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 3px 10px rgb(0 0 0 / 0.06);
    }
    label {
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
    }
    input[type="number"] {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #d1d5db;
      border-radius: 8px;
      font-size: 1rem;
      margin-bottom: 18px;
      box-sizing: border-box;
    }
    button {
      background-color: #2563eb;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 10px 16px;
      cursor: pointer;
      font-weight: 600;
      font-size: 1rem;
    }
    button:disabled {
      background-color: #93c5fd;
      cursor: not-allowed;
    }
    #flashMessageContainer {
      position: fixed;
      top: 16px;
      right: 16px;
      z-index: 1200;
    }
    .flash {
      padding: 10px 14px;
      border-radius: 10px;
      margin-top: 8px;
      color: #fff;
      box-shadow: 0 6px 18px rgba(2, 6, 23, 0.08);
    }
    .flash.success { background: #16a34a; }
    .flash.error { background: #dc2626; }
  </style>
</head>
<body>
  <div id="flashMessageContainer"></div>

  <h1>Set Fees Due for <%= student.firstName %> <%= student.lastName || '' %></h1>

  <form id="setFeesDueForm" novalidate>
    <label for="feesDueInput">Fees Due Amount (₹)</label>
    <input
      type="number"
      id="feesDueInput"
      name="feesDue"
      min="0"
      step="0.01"
      required
      value="<%= student.feesDue || 0 %>"
    />
    <input type="hidden" name="studentId" value="<%= student._id %>" />
    <button type="submit" id="submitBtn">Update Fees Due</button>
  </form>

  <script>
    function showFlashMessage(type = 'info', message = '') {
      const container = document.getElementById('flashMessageContainer');
      const d = document.createElement('div');
      d.className = 'flash ' + (type === 'error' ? 'error' : type === 'success' ? 'success' : 'info');
      d.textContent = message;
      container.appendChild(d);
      setTimeout(() => { d.style.opacity = '0'; setTimeout(() => d.remove(), 300); }, 3500);
    }

    async function handleServerError(res) {
      let msg = 'Server error';
      try {
        const ct = res.headers.get('content-type') || '';
        if (ct.includes('application/json')) {
          const j = await res.json();
          msg = j.error || j.message || JSON.stringify(j);
        } else {
          const text = await res.text();
          msg = text.replace(/<\/?[^>]+(>|$)/g, '').slice(0, 200) || 'Server returned an error';
        }
      } catch {
        msg = 'Server error';
      }
      showFlashMessage('error', msg);
    }

    document.getElementById('setFeesDueForm').addEventListener('submit', async (ev) => {
      ev.preventDefault();
      const btn = document.getElementById('submitBtn');
      btn.disabled = true;

      const feesDue = parseFloat(document.getElementById('feesDueInput').value);
      if (isNaN(feesDue) || feesDue < 0) {
        showFlashMessage('error', 'Please enter a valid non-negative amount');
        btn.disabled = false;
        return;
      }

      const studentId = ev.target.studentId.value;

      try {
        const res = await fetch(`/Payment/set-due/${studentId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ feesDue })
        });
        if (!res.ok) {
          await handleServerError(res);
          btn.disabled = false;
          return;
        }
        const data = await res.json();
        showFlashMessage('success', data.message || 'Fees Due updated successfully');
      } catch (err) {
        console.error(err);
        showFlashMessage('error', 'Network error while updating Fees Due');
      } finally {
        btn.disabled = false;
      }
    });
  </script>
</body>
</html>
