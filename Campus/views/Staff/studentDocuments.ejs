<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>All Students</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        /* --- STYLES FOR CONSISTENT LOOK AND FEEL --- */
        :root {
            --primary-color: #2563eb;
            --primary-dark: #1c3d90;
            --secondary-color: #fef7ed;
            --text-dark: #1e293b;
            --text-light: #475569;
            --border-color: #e2e8f0;
            --card-shadow: 0 4px 12px rgba(0,0,0,0.06);
            --danger-color: #dc2626;
            --danger-dark: #b91c1c;
            --danger-light: #fee2e2;
        }

        /* Popups and Flash Messages */
         #errorPopupContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            background: rgba(0, 0, 0, 0.4);
            font-family: 'Montserrat', sans-serif;
        }

        #errorPopupContainer * {
            box-sizing: border-box;
            font-family: inherit;
            margin: 0;
            padding: 0;
        }

        #errorPopupBox {
            max-width: 400px;
            width: 90%;
            padding: 30px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        #errorPopupBox h1 {
            font-size: 3rem;
            font-weight: 700;
            color: #e74c3c;
        }

        #errorPopupBox h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 10px 0;
        }

        #errorMessage {
            font-size: 1rem;
            color: #666;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border-left: 4px solid #e74c3c;
            text-align: left;
            word-wrap: break-word;
        }

        #closeErrorPopup {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 24px;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: pointer;
        }

        #closeErrorPopup:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

            #flashMessageContainer {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 9998;
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 420px;
            padding: 0 1rem;
            pointer-events: none;
        }

        .flash-message {
            padding: 1rem 1.25rem;
            margin-bottom: 0.75rem;
            border-radius: 8px;
            font-weight: 600;
            width: 100%;
            text-align: center;
            pointer-events: all;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: fadeIn 0.4s ease;
        }

        .flash-success {
            background-color: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
        }

        .flash-error {
            background-color: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        /* Main Page Styles */
        * {
            box-sizing: border-box; margin: 0; padding: 0;
        }
        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--secondary-color);
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: auto;
            padding: 2rem;
        }
        h1 {
            font-family: 'Inter', sans-serif;
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-dark);
            margin-bottom: 2rem;
            text-align: center;
        }

        /* Table Styles */
        .table-container {
            background: #fff;
            border: 1px solid var(--border-color);
            border-radius: 12px;
            padding: 1rem;
            box-shadow: var(--card-shadow);
            overflow-x: auto;
        }
        .styled-table {
            width: 100%;
            border-collapse: collapse;
        }
        .styled-table th, .styled-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
            white-space: nowrap;
            font-size: 0.9rem;
        }
        .styled-table thead th {
            background-color: #f8fafc;
            font-weight: 600;
            color: var(--text-light);
            font-size: 0.8rem;
            text-transform: uppercase;
        }
        .styled-table tbody tr:hover {
            background-color: #f8fafc;
        }
        .styled-table tbody tr:last-child td {
            border-bottom: none;
        }

        /* Button Styles */
        .btn {
            padding: 0.5rem 1rem;
            border: 1px solid transparent;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.2s ease;
            font-size: 0.85rem;
        }
        .btn-manage {
            background-color: #3b82f6;
            color: white;
        }
        .btn-manage:hover {
            background-color: #2563eb;
        }
        /* ADDED FOR MODAL */
        .btn-danger-solid {
            background-color: var(--danger-color);
            color: white;
        }
        .btn-danger-solid:hover {
            background-color: var(--danger-dark);
        }
        .btn-secondary {
            background-color: #e2e8f0;
            color: var(--text-light);
            border-color: #cbd5e0;
        }
        .btn-secondary:hover {
            background-color: #cbd5e0;
        }

        @media (max-width: 992px) {
            /* Responsive table styles remain unchanged */
        }
        
        /* --- STYLES FOR CUSTOM CONFIRMATION MODAL --- */
        .modal-backdrop {
            position: fixed; top: 0; left: 0;
            width: 100%; height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex; justify-content: center; align-items: center;
            z-index: 1000;
            opacity: 0; visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }
        .modal-backdrop.visible {
            opacity: 1; visibility: visible;
        }
        .modal-content {
            background-color: white; padding: 2rem; border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            max-width: 400px; width: 90%; text-align: center;
            transform: scale(0.95);
            transition: transform 0.3s ease;
        }
        .modal-backdrop.visible .modal-content {
            transform: scale(1);
        }
        .modal-content h3 {
            font-family: 'Inter', sans-serif; font-size: 1.5rem;
            color: var(--text-dark); margin-bottom: 0.75rem;
        }
        .modal-content p {
            color: var(--text-light); margin-bottom: 2rem;
        }
        .modal-actions {
            display: flex; justify-content: center; gap: 1rem;
        }
        .modal-actions .btn {
            width: 120px; justify-content: center;
        }
    </style>
</head>
<body>
    <div id="flashMessageContainer"></div>
    <main class="container">
        <h1 style="color: #2563eb;">Students Documents Page</h1>

        <div class="table-container">
            <% if (students.length === 0) { %>
                <p style="text-align:center; padding: 2rem;">No students listed.</p>
            <% } else { %>
                <table class="styled-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Course</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>DOB</th>
                            <th>Guardian</th>
                            <th>Class</th>
                            <!-- <th>Address</th> -->
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% students.forEach(student => { %>
                            <tr>
                                <td data-label="Name"><%= student.firstName %> <%= student.middleName || '' %> <%= student.lastName %></td>
                                <td data-label="Course"><%= student.course || 'N/A' %></td>
                                <td data-label="Email"><%= student.studentEmail %></td>
                                <td data-label="Phone"><%= student.studentPhone %></td>
                                <td data-label="DOB"><%= student.dob ? student.dob.toDateString() : '' %></td>
                                <td data-label="Guardian"><%= student.guardian1Name %> (<%= student.guardian1Relation %>)</td>
                                <td data-label="Class"><%= student.classAssigned %></td>
                                <!-- <td data-label="Address">
                                    <%= student.address1 %>,
                                    <%= student.city || '' %>,
                                    <%= student.state %> - <%= student.zipcode %>
                                </td> -->
                                <td data-label="Actions" style="display: flex; gap: 0.5rem;">
                                    <button class="btn btn-manage" data-id="<%= student._id %>">Manage Documents</button>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            <% } %>
        </div>
    </main>

    <script>
        window.onload = async function() {
            const token = localStorage.getItem('token');
            try {
                    const res = await fetch('/Auth/verify-token', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        }
                    }); 
                    if (!res.ok){

                        const contentType = res.headers.get('Content-Type') || '';

                    if (contentType.includes('text/html')) {
                        const html = await res.text();
                        const tempDiv = document.createElement('div');
                        tempDiv.innerHTML = html;

                        const popup = tempDiv.querySelector('#errorPopupContainer');
                        const scripts = tempDiv.querySelectorAll('script');

                        if (popup) {
                        document.body.prepend(popup);
                        scripts.forEach((script) => {
                            const newScript = document.createElement('script');
                            if (script.src) newScript.src = script.src;
                            else newScript.textContent = script.textContent;
                            document.body.appendChild(newScript);
                        });
                        } else {
                        showFlashMessage('error', 'An unknown error occurred.');
                        }

                        // Add redirect after short delay for session errors
                        setTimeout(() => {
                        window.location.href = '/Staff/login';
                        }, 1500);
                    } else {
                        showFlashMessage('error', 'Server error: unexpected content type.');

                        // Optional: Redirect for other cases too
                        setTimeout(() => {
                        window.location.href = '/Staff/login';
                        }, 1500);
                    }
                    }
                    } catch (err) {
                    showFlashMessage('error', 'An unknown error occurred.');
                    }
                        try {
                        const token = localStorage.getItem('token');
                        if (!token) {
                        console.error('No token found');
                        return;
                        }
                        // console.log('Token:', token);
                        // Decode JWT to get staffId
                        const payload = JSON.parse(atob(token.split('.')[1]));
                        const staffId = payload._id;
                        
                        const res = await fetch('/Manage/get-permissions', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ staffId })
                        });

                        if (!res.ok) {
                        handleServerError(res);
                        return;
                        }

                        const data = await res.json();
                        const permissions = data.permissions || [];
                        // console.log('Permissions:', permissions);
                        // Hide all menu items not in permissions
                        
                        if (!permissions.includes('document_students')) {
                            showFlashMessage('error', 'You do not have permission to access this page.');
                            setTimeout(() => {
                                window.location.href = '/Staff/dashboard';
                            }, 1500);
                        }
                    } catch (err) {
                        console.error('Error fetching permissions:', err);
                    }
                }

            async function handleServerError(res) {
                const contentType = res.headers.get('Content-Type') || '';

                if (contentType.includes('text/html')) {
                const html = await res.text();
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = html;

                const popup = tempDiv.querySelector('#errorPopupContainer');
                const scripts = tempDiv.querySelectorAll('script');

                if (popup) {
                    document.body.prepend(popup);
                    scripts.forEach((script) => {
                    const newScript = document.createElement('script');
                    if (script.src) newScript.src = script.src;
                    else newScript.textContent = script.textContent;
                    document.body.appendChild(newScript);
                    });
                } else {
                    showFlashMessage('error', 'An unknown error occurred.');
                }
                } else {
                showFlashMessage('error', 'Server error: unexpected content type.');
                }
            } 

            function showFlashMessage(type, message, duration = 4000) {
                const container = document.getElementById('flashMessageContainer');
                const msg = document.createElement('div');
                msg.classList.add('flash-message');
                msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
                msg.textContent = message;

                container.appendChild(msg);

                setTimeout(() => {
                msg.style.opacity = '0';
                msg.style.transform = 'translateY(-10px)';
                setTimeout(() => msg.remove(), 500);
                }, duration);
            } 

            // --- UPDATED SCRIPT TO USE THE MODAL ---
            document.addEventListener('DOMContentLoaded', () => {

                // Edit button logic remains the same
                document.querySelectorAll('.btn-manage').forEach(btn => {
                    btn.addEventListener('click', () => {
                        const id = btn.dataset.id;
                        window.location.href = `/Manage/documents/${id}`;
                    });
                });
            });

    </script>
</body>
</html>