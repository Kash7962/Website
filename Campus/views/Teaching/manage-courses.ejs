<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Manage Course Materials</title>
  <link rel="stylesheet" href="/css/styles.css" />
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f9f9f9;
      padding: 2rem;
    }

    h1 {
      font-size: 2rem;
      margin-bottom: 1.5rem;
    }

    form {
      background: white;
      padding: 1.5rem;
      border-radius: 6px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
      margin-bottom: 2rem;
    }

    label {
      font-weight: bold;
      display: block;
      margin-top: 1rem;
    }

    input, button {
      padding: 0.5rem;
      margin-top: 0.5rem;
      width: 100%;
      box-sizing: border-box;
    }

    button {
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1rem;
    }

    .card {
      background: #fff;
      border: 1px solid #ccc;
      padding: 1rem;
      border-radius: 6px;
      box-shadow: 0 1px 4px rgba(0,0,0,0.1);
    }

    iframe, img {
      width: 100%;
      height: 200px;
      object-fit: contain;
      border: 1px solid #ddd;
      margin-top: 0.5rem;
    }

    .btn {
      display: block;
      width: 100%;
      padding: 0.5rem;
      margin-top: 0.75rem;
      border-radius: 4px;
      cursor: pointer;
      border: none;
    }

    .delete-btn {
      background: #dc3545;
      color: white;
      display: none;
    }

    .download-btn {
      background: #28a745;
      color: white;
      text-align: center;
      text-decoration: none;
    }
  </style>
</head>
<body>
  <h1>Manage Course Materials</h1>

  <!-- Upload Form -->
  <form id="uploadForm" enctype="multipart/form-data">
    <label for="courseName">Course Material Name</label>
    <input type="text" name="courseName" id="courseName" required />

    <label for="file">Upload PDF/Image</label>
    <input type="file" name="file" id="file" accept="application/pdf,image/*" required />

    <button type="submit">Upload</button>
  </form>

  <!-- Display Course Materials -->
  <div class="grid" id="materialsGrid">
    <% files.forEach(file => { %>
      <div class="card" id="card-<%= file._id %>">
        <p><strong><%= file.courseName %></strong></p>

        <% if (file.filename.endsWith('.pdf')) { %>
          <iframe src="/uploads/teaching/courses/<%= file.filename %>" frameborder="0"></iframe>
        <% } else { %>
          <img src="/uploads/teaching/courses/<%= file.filename %>" alt="Course Material" />
        <% } %>

        <p>Uploaded by: <%= file.uploadedBy.name %></p>

        <!-- Download Button -->
        <a
          href="/uploads/teaching/courses/<%= file.filename %>"
          class="btn download-btn"
          download="<%= file.courseName %>"
        >
          Download
        </a>

        <!-- Delete Button -->
        <button
          class="btn delete-btn"
          data-email="<%= file.uploadedBy.email %>"
          data-id="<%= file._id %>"
        >
          Delete
        </button>
      </div>
    <% }) %>
  </div>

  <script>
     const token = localStorage.getItem("token");
      let user = null;

    if (token) {
    try {
    const payload = JSON.parse(atob(token.split('.')[1]));
    user = payload;
  } catch (e) {
    console.error("Failed to decode token:", e);
  }
  }
    const { _id, username, email } = user || {};

    // Upload Logic
    const uploadForm = document.getElementById('uploadForm');
    uploadForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData();
      formData.append("courseName", document.getElementById("courseName").value);
      formData.append("file", document.getElementById("file").files[0]);
      formData.append("userId", _id);
      formData.append("username", username);
      formData.append("email", email);

      try {
        const res = await fetch('/Staff/Teaching/upload-course', {
          method: 'POST',
          body: formData
        });

        const result = await res.text();
        if (res.ok) {
          alert("Upload successful!");
          location.reload();
        } else {
          alert("Upload failed: " + result);
        }
      } catch (err) {
        alert("Upload error");
      }
    });

    // Show delete buttons only for uploader
    document.querySelectorAll(".delete-btn").forEach(btn => {
      if (btn.dataset.email === email) {
        btn.style.display = "block";
        btn.addEventListener("click", () => deleteMaterial(btn.dataset.id));
      }
    });

    // Delete Logic
    async function deleteMaterial(id) {
      if (!confirm("Are you sure you want to delete this material?")) return;

      try {
        const res = await fetch("/Staff/Teaching/manage-courses/delete", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id, email })
        });

        const result = await res.text();
        if (res.ok) {
          alert("Deleted successfully");
          document.getElementById(`card-${id}`).remove();
        } else {
          alert("Delete failed: " + result);
        }
      } catch (err) {
        alert("Delete error");
      }
    }
  </script>
</body>
</html>
