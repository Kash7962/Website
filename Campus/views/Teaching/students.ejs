<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Students by Class</title>
  <style>
    body {
      font-family: Arial;
      padding: 30px;
      background-color: #f4f4f4;
    }

    h2 {
      text-align: center;
    }

    select, button {
      padding: 10px;
      margin-bottom: 20px;
      font-size: 16px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th, td {
      padding: 10px;
      border: 1px solid #ccc;
      text-align: left;
    }

    th {
      background: #007bff;
      color: #fff;
    }

    a.btn {
      background: #28a745;
      color: #fff;
      padding: 6px 12px;
      text-decoration: none;
      border-radius: 4px;
      margin-right: 5px;
    }

    a.btn:hover {
      background: #1e7e34;
    }

    .btn-attendance {
      background: #ffc107;
    }

    .btn-attendance:hover {
      background: #e0a800;
    }

    #classSelectWrapper {
      text-align: center;
      margin-bottom: 30px;
    }

    #studentTableWrapper {
      display: none;
    }
  </style>
</head>
<body>

  <h2>Select Class to View Students</h2>

  <div id="classSelectWrapper">
    <select id="classDropdown">
      <option value="">-- Select Class --</option>
    </select>
  </div>

  <div id="studentTableWrapper">
    <h2>Students of Class: <span id="selectedClass"></span></h2>
    <table>
      <thead>
        <tr>
          <th>Full Name</th>
          <th>Email</th>
          <th>Phone</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="studentTableBody">
        <!-- Filled dynamically -->
      </tbody>
    </table>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", async () => {
      const token = localStorage.getItem("token");

      if (!token) {
        alert("No token found. Please login first.");
        return;
      }

      const classDropdown = document.getElementById('classDropdown');
      const studentTableWrapper = document.getElementById('studentTableWrapper');
      const studentTableBody = document.getElementById('studentTableBody');
      const selectedClassText = document.getElementById('selectedClass');

      async function fetchTeacherInfo() {
        try {
          const res = await fetch('/Staff/Teaching/update-profile', {
            method: 'GET',
            headers: {
              Authorization: `Bearer ${token}`
            }
          });

          if (!res.ok) {
            alert("Error fetching teacher info");
            return null;
          }

          const user = await res.json(); // âœ… direct rename
          console.log("Teacher data:", user);
          return user;
        } catch (err) {
          console.error("Error fetching teacher info:", err);
          return null;
        }
      }

      async function fetchStudentsByClass(classAssigned) {
        try {
          const res = await fetch('/Staff/Teaching/students', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              Authorization: `Bearer ${token}`
            },
            body: JSON.stringify({ classAssigned })
          });

          if (!res.ok) {
            alert("Failed to fetch students");
            return [];
          }

          const data = await res.json();
          return data.students;
        } catch (err) {
          console.error("Error fetching students:", err);
          return [];
        }
      }

      function populateDropdown(classes) {
        classDropdown.innerHTML = `<option value="">-- Select Class --</option>`;
        classes.forEach(cls => {
          const opt = document.createElement('option');
          opt.value = cls;
          opt.textContent = cls;
          classDropdown.appendChild(opt);
        });
      }

      function displayStudents(students, classAssigned) {
        studentTableBody.innerHTML = '';
        if (!students.length) {
          studentTableBody.innerHTML = `<tr><td colspan="4">No students found for this class.</td></tr>`;
        } else {
          students.forEach(stu => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td>${stu.firstName} ${stu.lastName}</td>
              <td>${stu.studentEmail}</td>
              <td>${stu.studentPhone}</td>
              <td>
                <a href="/Staff/Teaching/student/${stu._id}" class="btn">Add Marks</a>
                <a href="/Staff/Teaching/attendance/${stu._id}" class="btn btn-attendance">Add Attendance</a>
              </td>
            `;
            studentTableBody.appendChild(row);
          });
        }

        selectedClassText.textContent = classAssigned;
        studentTableWrapper.style.display = 'block';
      }

      const teacher = await fetchTeacherInfo();
      if (teacher && teacher.classAssigned?.length > 0) {
        const uniqueClasses = [...new Set(teacher.classAssigned)];
        populateDropdown(uniqueClasses);
      } else {
        alert("No classes assigned to this teacher.");
      }

      classDropdown.addEventListener("change", async () => {
        const selectedClass = classDropdown.value;
        if (!selectedClass) return;

        const students = await fetchStudentsByClass(selectedClass);
        displayStudents(students, selectedClass);
      });
    });
  </script>

</body>
</html>
