<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><%= pageTitle %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Modern Styling -->
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

    :root {
      --bg: #f1f5f9;
      --card: #ffffff;
      --border: #e2e8f0;
      --text-primary: #0f172a;
      --text-secondary: #475569;
      --muted: #94a3b8;
      --accent: #2563eb;
      --accent-dark: #1e40af;
      --success: #16a34a;
      --danger: #dc2626;
    }

    body {
      font-family: 'Inter', system-ui, sans-serif;
      margin: 0;
      padding: 0;
      background: var(--bg);
      color: var(--text-primary);
      line-height: 1.6;
    }

    header {
      padding: 1.2rem 2rem;
      background: var(--card);
      border-bottom: 1px solid var(--border);
      box-shadow: 0 2px 6px rgba(0,0,0,0.05);
      text-align: center;
      position: sticky;
      top: 0;
      z-index: 10;
    }
    header h1 {
      margin: 0;
      font-size: 1.8rem;
      color: var(--accent-dark);
      font-weight: 700;
    }

    section {
      max-width: 1100px;
      margin: 2rem auto;
      padding: 1.5rem;
      background: var(--card);
      border-radius: 12px;
      border: 1px solid var(--border);
      box-shadow: 0 6px 12px rgba(0,0,0,0.04);
    }

    section h2 {
      font-size: 1.1rem;
      font-weight: 600;
      color: var(--text-secondary);
      margin-bottom: 1rem;
      text-align: left;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
      font-size: 0.95rem;
      border-radius: 8px;
      overflow: hidden;
    }

    th, td {
      padding: 12px 16px;
      border-bottom: 1px solid var(--border);
      text-align: left;
    }

    th {
      background: #eff6ff;
      color: var(--accent-dark);
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.75rem;
      letter-spacing: 0.05em;
    }

    tbody tr:nth-child(even) {
      background: #f9fafb;
    }

    tbody tr:hover {
      background: #f1f5f9;
      transition: background 0.2s;
    }

    .no-data {
      text-align: center;
      padding: 2rem;
      font-size: 0.95rem;
      color: var(--muted);
    }

    tfoot td {
      font-weight: 600;
      background: #f9fafb;
      text-align: right;
      color: var(--text-primary);
    }

    .badge {
      display: inline-block;
      padding: 0.25rem 0.6rem;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 600;
    }
    .badge-success {
      background: #dcfce7;
      color: var(--success);
    }
    .badge-danger {
      background: #fee2e2;
      color: var(--danger);
    }

      #errorPopupContainer {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999;
      background: rgba(0, 0, 0, 0.4);
      font-family: 'Montserrat', sans-serif;
    }

    #errorPopupContainer * {
      box-sizing: border-box;
      font-family: inherit;
      margin: 0;
      padding: 0;
    }

    #errorPopupBox {
      max-width: 400px;
      width: 90%;
      padding: 30px;
      border-radius: 10px;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(6px);
      border: 1px solid rgba(0, 0, 0, 0.1);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
      text-align: center;
    }

    #errorPopupBox h1 {
      font-size: 3rem;
      font-weight: 700;
      color: #e74c3c;
    }

    #errorPopupBox h2 {
      font-size: 1.5rem;
      font-weight: 700;
      color: #333;
      margin: 10px 0;
    }

    #errorMessage {
      font-size: 1rem;
      color: #666;
      background-color: #ffffff;
      padding: 15px;
      border-radius: 5px;
      margin: 20px 0;
      border-left: 4px solid #e74c3c;
      text-align: left;
      word-wrap: break-word;
    }

    #closeErrorPopup {
      display: inline-block;
      margin-top: 10px;
      padding: 10px 24px;
      background-color: #3498db;
      color: #fff;
      text-decoration: none;
      border-radius: 5px;
      font-weight: bold;
      transition: background-color 0.3s ease, transform 0.2s ease;
      cursor: pointer;
    }

    #closeErrorPopup:hover {
      background-color: #2980b9;
      transform: translateY(-2px);
    }

      #flashMessageContainer {
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      z-index: 9998;
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 100%;
      max-width: 420px;
      padding: 0 1rem;
      pointer-events: none;
    }

    .flash-message {
      padding: 1rem 1.25rem;
      margin-bottom: 0.75rem;
      border-radius: 8px;
      font-weight: 600;
      width: 100%;
      text-align: center;
      pointer-events: all;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      animation: fadeIn 0.4s ease;
    }

    .flash-success {
      background-color: #d1fae5;
      color: #065f46;
      border: 1px solid #10b981;
    }

    .flash-error {
      background-color: #fee2e2;
      color: #991b1b;
      border: 1px solid #ef4444;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }

  </style>
</head>
<body>
  <header>
    <h1>üì¶ Kitchen Inventory üçΩÔ∏è</h1>
  </header>

  <% if (inventory && inventory.length > 0) { %>
    <% inventory.forEach(inv => { 
         let totalAmount = 0; 
         if (inv.items && inv.items.length > 0) {
           inv.items.forEach(it => { totalAmount += (it.quantity * it.pricePerUnit); });
         }
    %>
      <section>
        <h2>
          <strong>Procurement:</strong> <%= inv.procurementId ? inv.procurementId.originalName : 'N/A' %> 
          &nbsp; | &nbsp; <strong>Uploaded by:</strong> <%= inv.uploader ? inv.uploader.name : 'Unknown' %>
        </h2>
        <table>
          <thead>
            <tr>
              <th>Item Name</th>
              <th>Quantity</th>
              <th>Unit</th>
              <th>Price per Unit</th>
              <th>Last Updated By</th>
              <th>Total</th>
            </tr>
          </thead>
          <tbody>
            <% if (inv.items && inv.items.length > 0) { %>
              <% inv.items.forEach(item => { %>
                <tr>
                  <td><%= item.itemName %></td>
                  <td><%= item.quantity %></td>
                  <td><%= item.unit || '-' %></td>
                  <td>‚Çπ<%= item.pricePerUnit %></td>
                  <td>
                    <% if (item.lastUpdatedBy) { %>
                      <span class="badge badge-success"><%= item.lastUpdatedBy.name %></span>
                    <% } else { %>
                      <span class="badge badge-danger">N/A</span>
                    <% } %>
                  </td>
                  <td>‚Çπ<%= (item.quantity * item.pricePerUnit).toFixed(2) %></td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="6" class="no-data">No items recorded</td>
              </tr>
            <% } %>
          </tbody>
          <tfoot>
            <tr>
              <td colspan="5">Total Amount</td>
              <td>‚Çπ<%= totalAmount.toFixed(2) %></td>
            </tr>
          </tfoot>
        </table>
      </section>
    <% }) %>
  <% } else { %>
    <div class="no-data">No inventory records found.</div>
  <% } %>

  <script>
     window.onload = async () => {
            const token = localStorage.getItem('token');
            try {
                const res = await fetch('/Auth/verify-token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (!res.ok) {
                    const contentType = res.headers.get('Content-Type') || '';
                    if (contentType.includes('text/html')) {
                        const html = await res.text();
                        const tempDiv = document.createElement('div');
                        tempDiv.innerHTML = html;
                        const popup = tempDiv.querySelector('#errorPopupContainer');
                        const scripts = tempDiv.querySelectorAll('script');
                        if (popup) {
                            document.body.prepend(popup);
                            scripts.forEach((script) => {
                                const newScript = document.createElement('script');
                                if (script.src) newScript.src = script.src;
                                else newScript.textContent = script.textContent;
                                document.body.appendChild(newScript);
                            });
                        } else {
                            showFlashMessage('error', 'An unknown error occurred.');
                        }
                        setTimeout(() => {
                            window.location.href = '/Staff/login';
                        }, 1500);
                    } else {
                        showFlashMessage('error', 'Server error: unexpected content type.');
                        setTimeout(() => {
                            window.location.href = '/Staff/login';
                        }, 1500);
                    }
                }
            } catch (err) {
                showFlashMessage('error', 'An unknown error occurred.');
            }
          }
    document.addEventListener('DOMContentLoaded', () => {
      console.log("‚úÖ Admin Inventory View Loaded");
    });
  </script>
</body>
</html>
