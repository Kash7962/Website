<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Admin Profile</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        /* --- STYLES FOR CONSISTENT LOOK AND FEEL --- */
        
        /* Popups and Flash Messages */
         #errorPopupContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            background: rgba(0, 0, 0, 0.4);
            font-family: 'Montserrat', sans-serif;
        }

        #errorPopupContainer * {
            box-sizing: border-box;
            font-family: inherit;
            margin: 0;
            padding: 0;
        }

        #errorPopupBox {
            max-width: 400px;
            width: 90%;
            padding: 30px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        #errorPopupBox h1 {
            font-size: 3rem;
            font-weight: 700;
            color: #e74c3c;
        }

        #errorPopupBox h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 10px 0;
        }

        #errorMessage {
            font-size: 1rem;
            color: #666;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border-left: 4px solid #e74c3c;
            text-align: left;
            word-wrap: break-word;
        }

        #closeErrorPopup {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 24px;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: pointer;
        }

        #closeErrorPopup:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

        #flashMessageContainer {
            position: fixed; top: 20px; left: 50%;
            transform: translateX(-50%); z-index: 9998; display: flex;
            flex-direction: column; align-items: center; width: 100%;
            max-width: 420px; padding: 0 1rem; pointer-events: none;
        }
        .flash-message {
            padding: 1rem 1.25rem; margin-bottom: 0.75rem; border-radius: 8px;
            font-weight: 600; width: 100%; text-align: center; pointer-events: all;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: fadeIn 0.4s ease;
        }
        .flash-success { background-color: #d1fae5; color: #065f46; border: 1px solid #10b981; }
        .flash-error { background-color: #fee2e2; color: #991b1b; border: 1px solid #ef4444; }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        /* Main Page Styles */
        * {
            box-sizing: border-box; margin: 0; padding: 0;
        }
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #fef7ed;
            margin: 0; padding: 1rem; color: #333; min-height: 100vh;
            display: flex; justify-content: center; align-items: center;
        }
        .container {
            width: 100%; max-width: 500px; background: #ffffff;
            padding: 2.5rem; border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border-top: 5px solid #1e40af; /* Blue accent */
        }
        h2 {
            text-align: center; color: #1e40af; margin-bottom: 2rem;
            font-family: 'Inter', sans-serif; font-size: 1.75rem;
        }
        .form-group { margin-bottom: 1.25rem; }
        label {
            display: block;
            margin-bottom: 0.5rem; font-weight: 600;
            color: #4b5563; font-size: 0.9rem;
        }
        input {
            width: 100%;
            padding: 0.75rem 1rem; font-size: 1rem;
            font-family: 'Poppins', sans-serif;
            border: 1px solid #d1d5db; border-radius: 8px;
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        input:focus {
            outline: none; border-color: #f97316;
            box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.2);
        }
        input[readonly] {
            background-color: #f3f4f6;
            color: #6b7280;
            cursor: not-allowed;
        }
        
        /* Button Styles */
        .button-group {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }
        button {
            width: 100%;
            padding: 0.8rem; border: none; border-radius: 8px;
            font-size: 1rem; font-weight: 600;
            font-family: 'Inter', sans-serif; cursor: pointer;
            transition: all 0.3s ease;
        }
        button[type="submit"] {
            background-color: #1e40af; color: white;
        }
        button[type="submit"]:hover { background-color: #1c3d90; }

        button.btn-secondary {
            background-color: #e5e7eb;
            color: #374151;
        }
        button.btn-secondary:hover {
            background-color: #d1d5db;
        }
        
        @media (max-width: 500px) {
            body { padding: 0; }
            .container {
                margin: 0; border-radius: 0; min-height: 100vh;
                box-shadow: none; padding: 2rem 1.5rem;
            }
            h2 { font-size: 1.5rem; }
        }
    </style>
</head>
<body>
    <div id="flashMessageContainer"></div>
    <div class="container">
        <h2>Admin Profile</h2>
        <form id="adminProfileForm">
            <div class="form-group">
                <label for="adminID">Admin ID</label>
                <input type="text" id="adminID" value="<%= admin.adminID %>" readonly>
            </div>
            <div class="form-group">
                <label for="role">Role</label>
                <input type="text" id="role" value="<%= admin.role %>" readonly>
            </div>
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" value="<%= admin.name %>" required>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" value="<%= admin.email %>" required>
            </div>
            <div class="form-group">
                <label for="phone">Phone</label>
                <input type="text" id="phone" name="phone" value="<%= admin.phone %>" required>
            </div>

            <div class="button-group">
                <button type="button" class="btn-secondary" id="backButton">Go Back</button>
                <button type="submit">Update Profile</button>
            </div>
        </form>
    </div>

    <script>
        // Your original JavaScript logic is preserved below
        async function handleServerError(res) {
            const contentType = res.headers.get('Content-Type') || '';
            if (contentType.includes('text/html')) {
                const html = await res.text();
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = html;
                const popup = tempDiv.querySelector('#errorPopupContainer');
                if (popup) {
                    document.body.prepend(popup);
                    const scripts = tempDiv.querySelectorAll('script');
                    scripts.forEach((script) => {
                        const newScript = document.createElement('script');
                        if (script.src) { newScript.src = script.src; } 
                        else { newScript.textContent = script.textContent; }
                        document.body.appendChild(newScript);
                    });
                } else {
                    showFlashMessage('error', 'An unknown error occurred.');
                }
                return;
            }
            showFlashMessage('error', 'Server error: unexpected content type.');
        }

        function showFlashMessage(type, message, duration = 4000) {
            const container = document.getElementById('flashMessageContainer');
            const msg = document.createElement('div');
            msg.classList.add('flash-message');
            msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
            msg.textContent = message;
            container.appendChild(msg);
            setTimeout(() => {
                msg.style.opacity = '0';
                msg.style.transform = 'translateY(-10px)';
                setTimeout(() => msg.remove(), 500);
            }, duration);
        }

         window.onload = async () => {
            const token = localStorage.getItem('token');
            try {
                const res = await fetch('/Auth/verify-token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (!res.ok) {
                    const contentType = res.headers.get('Content-Type') || '';
                    if (contentType.includes('text/html')) {
                        const html = await res.text();
                        const tempDiv = document.createElement('div');
                        tempDiv.innerHTML = html;
                        const popup = tempDiv.querySelector('#errorPopupContainer');
                        const scripts = tempDiv.querySelectorAll('script');
                        if (popup) {
                            document.body.prepend(popup);
                            scripts.forEach((script) => {
                                const newScript = document.createElement('script');
                                if (script.src) newScript.src = script.src;
                                else newScript.textContent = script.textContent;
                                document.body.appendChild(newScript);
                            });
                        } else {
                            showFlashMessage('error', 'An unknown error occurred.');
                        }
                        setTimeout(() => {
                            window.location.href = '/Staff/login';
                        }, 1500);
                    } else {
                        showFlashMessage('error', 'Server error: unexpected content type.');
                        setTimeout(() => {
                            window.location.href = '/Staff/login';
                        }, 1500);
                    }
                }
            } catch (err) {
                showFlashMessage('error', 'An unknown error occurred.');
            }
             try {
                const payload = JSON.parse(atob(token.split('.')[1]));
                const role = payload.role;
                if (role !== 'Super Admin' && role !== 'Admin') {
                    showFlashMessage('error', 'Unauthorized access.');
                    setTimeout(() => window.location.href = '/Admin/dashboard', 1500);
                }
            } catch (err) {
                console.error('Failed to decode JWT:', err);
                showFlashMessage('error', 'Invalid token.');
            }

        }

        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('adminProfileForm');
            const backButton = document.getElementById('backButton');

            // Add event listener for the back button
            if(backButton) {
                backButton.addEventListener('click', () => {
                    window.history.back();
                });
            }

            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                const token = localStorage.getItem('token');
                if (!token) {
                    showFlashMessage('error', 'Authentication token missing.');
                    return;
                }
                const body = {
                    name: form.name.value.trim(),
                    email: form.email.value.trim().toLowerCase(),
                    phone: form.phone.value.trim()
                };
                try {
                    const res = await fetch('/admin/profile', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify(body)
                    });
                    if (!res.ok) {
                        await handleServerError(res);
                        return;
                    }
                    showFlashMessage('success', 'Profile updated successfully!');
                } catch (err) {
                    console.error(err);
                    showFlashMessage('error', 'Something went wrong.');
                }
            });
        });
    </script>
</body>
</html>