<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>All Admins</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary-color: #1e40af;
            --primary-dark: #1c3d90;
            --secondary-color: #fef7ed;
            --text-dark: #1e293b;
            --text-light: #475569;
            --border-color: #e2e8f0;
            --card-shadow: 0 4px 12px rgba(0,0,0,0.06);
            --danger-color: #dc2626;
            --danger-light: #fee2e2;
            --danger-dark: #b91c1c;
        }
          #errorPopupContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            background: rgba(0, 0, 0, 0.4);
            font-family: 'Montserrat', sans-serif;
        }

        #errorPopupContainer * {
            box-sizing: border-box;
            font-family: inherit;
            margin: 0;
            padding: 0;
        }

        #errorPopupBox {
            max-width: 400px;
            width: 90%;
            padding: 30px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        #errorPopupBox h1 {
            font-size: 3rem;
            font-weight: 700;
            color: #e74c3c;
        }

        #errorPopupBox h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 10px 0;
        }

        #errorMessage {
            font-size: 1rem;
            color: #666;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border-left: 4px solid #e74c3c;
            text-align: left;
            word-wrap: break-word;
        }

        #closeErrorPopup {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 24px;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: pointer;
        }

        #closeErrorPopup:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

        #flashMessageContainer {
            position: fixed; top: 20px; left: 50%;
            transform: translateX(-50%); z-index: 1001; display: flex;
            flex-direction: column; align-items: center; width: 100%;
            max-width: 420px; padding: 0 1rem; pointer-events: none;
        }
        .flash-message {
            padding: 1rem 1.25rem; margin-bottom: 0.75rem; border-radius: 8px;
            font-weight: 600; width: 100%; text-align: center; pointer-events: all;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: fadeIn 0.4s ease;
        }
        .flash-success { background-color: #d1fae5; color: #065f46; border: 1px solid #10b981; }
        .flash-error { background-color: #fee2e2; color: #991b1b; border: 1px solid #ef4444; }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        * {
            box-sizing: border-box; margin: 0; padding: 0;
        }
        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--secondary-color);
            color: #333;
        }
        .container {
            max-width: 900px;
            margin: auto;
            padding: 2rem;
        }
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 2rem;
            border-bottom: 1px solid var(--border-color);
            padding-bottom: 1.5rem;
        }
        h1 {
            font-family: 'Inter', sans-serif;
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-dark);
        }
        .btn {
            padding: 0.6rem 1.2rem;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.2s ease;
        }
        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }
        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        
        .admin-list {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }
        .admin-card {
            background: #fff;
            border: 1px solid var(--border-color);
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1.5rem;
        }
        .admin-info p {
            margin: 0.25rem 0;
            color: var(--text-light);
        }
        .admin-info p strong {
            color: var(--text-dark);
            min-width: 60px;
            display: inline-block;
        }
        .admin-info .admin-name {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
        }
        .admin-actions {
            display: flex;
            gap: 0.75rem;
            align-items: center;
        }
        .admin-actions .btn {
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
        }
        .btn-secondary {
            background-color: #f1f5f9;
            color: var(--text-light);
        }
        .btn-secondary:hover {
            background-color: #e2e8f0;
        }
        .btn-danger {
            background-color: var(--danger-light);
            color: var(--danger-color);
        }
        .btn-danger:hover {
            background-color: #fecaca;
            color: var(--danger-dark);
        }
        .delete-admin-form {
            margin: 0;
        }

        /* --- STYLES FOR CUSTOM CONFIRMATION MODAL --- */
        .modal-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }
        .modal-backdrop.visible {
            opacity: 1;
            visibility: visible;
        }
        .modal-content {
            background-color: white;
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            max-width: 400px;
            width: 90%;
            text-align: center;
            transform: scale(0.95);
            transition: transform 0.3s ease;
        }
        .modal-backdrop.visible .modal-content {
            transform: scale(1);
        }
        .modal-content h3 {
            font-family: 'Inter', sans-serif;
            font-size: 1.5rem;
            color: var(--text-dark);
            margin-bottom: 0.75rem;
        }
        .modal-content p {
            color: var(--text-light);
            margin-bottom: 2rem;
        }
        .modal-actions {
            display: flex;
            justify-content: center;
            gap: 1rem;
        }
        .modal-actions button {
            width: 120px;
        }

        @media (max-width: 600px) {
            .admin-card {
                flex-direction: column;
                align-items: flex-start;
            }
            .admin-actions {
                width: 100%;
                margin-top: 1rem;
            }
            .admin-actions .btn {
                flex-grow: 1;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div id="flashMessageContainer"></div>

    <main class="container">
        <div class="page-header">
            <h1>All Admins</h1>
            <a href="/Admin/register" class="btn btn-primary">➕ Create New Admin</a>
        </div>

        <div id="adminList" class="admin-list">
            <% admins.forEach(admin => { %>
                <div class="admin-card">
                    <div class="admin-info">
                        <p class="admin-name"><%= admin.name %></p>
                        <p><strong>ID:</strong> <%= admin.adminID %></p>
                        <p><strong>Email:</strong> <%= admin.email %></p>
                        <p><strong>Status:</strong> <%= admin.isActive ? 'Active' : 'Inactive' %></p>
                        <p><strong>Role:</strong> <%= admin.role %></p>
                    </div>
                    <div class="admin-actions">
                        <a href="/Admin/update/<%= admin._id %>" class="btn btn-secondary">✏️ Update</a>
                        <form class="delete-admin-form" data-id="<%= admin._id %>">
                            <button type="submit" class="btn btn-danger">🗑️ Delete</button>
                        </form>
                    </div>
                </div>
            <% }) %>
        </div>
    </main>

    <div id="confirmationModal" class="modal-backdrop">
        <div class="modal-content">
            <h3>Confirm Deletion</h3>
            <p>Are you sure you want to delete this admin? This action cannot be undone.</p>
            <div class="modal-actions">
                <button id="cancelDeleteBtn" class="btn btn-secondary">Cancel</button>
                <button id="confirmDeleteBtn" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>

    <script>
         window.onload = async () => {
            const token = localStorage.getItem('token');
            try {
                const res = await fetch('/Auth/verify-token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (!res.ok) {
                    const contentType = res.headers.get('Content-Type') || '';
                    if (contentType.includes('text/html')) {
                        const html = await res.text();
                        const tempDiv = document.createElement('div');
                        tempDiv.innerHTML = html;
                        const popup = tempDiv.querySelector('#errorPopupContainer');
                        const scripts = tempDiv.querySelectorAll('script');
                        if (popup) {
                            document.body.prepend(popup);
                            scripts.forEach((script) => {
                                const newScript = document.createElement('script');
                                if (script.src) newScript.src = script.src;
                                else newScript.textContent = script.textContent;
                                document.body.appendChild(newScript);
                            });
                        } else {
                            showFlashMessage('error', 'An unknown error occurred.');
                        }
                        setTimeout(() => {
                            window.location.href = '/Staff/login';
                        }, 1500);
                    } else {
                        showFlashMessage('error', 'Server error: unexpected content type.');
                        setTimeout(() => {
                            window.location.href = '/Staff/login';
                        }, 1500);
                    }
                }
            } catch (err) {
                showFlashMessage('error', 'An unknown error occurred.');
            }
             try {
                const payload = JSON.parse(atob(token.split('.')[1]));
                const role = payload.role;
                if (role !== 'Super Admin') {
                    showFlashMessage('error', 'Unauthorized access.');
                    setTimeout(() => window.location.href = '/Admin/dashboard', 1500);
                }
            } catch (err) {
                console.error('Failed to decode JWT:', err);
                showFlashMessage('error', 'Invalid token.');
            }
        }
       async function handleServerError(res) {
            const contentType = res.headers.get('Content-Type') || '';
            if (contentType.includes('text/html')) {
                const html = await res.text();
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = html;
                const popup = tempDiv.querySelector('#errorPopupContainer');
                if (popup) {
                    document.body.prepend(popup);
                    const scripts = tempDiv.querySelectorAll('script');
                    scripts.forEach((script) => {
                        const newScript = document.createElement('script');
                        if (script.src) newScript.src = script.src;
                        else newScript.textContent = script.textContent;
                        document.body.appendChild(newScript);
                    });
                } else {
                    showFlashMessage('error', 'An unknown error occurred.');
                }
            } else {
                showFlashMessage('error', 'Server error: unexpected content type.');
            }
        }

        function showFlashMessage(type, message, duration = 4000) {
            const container = document.getElementById('flashMessageContainer');
            const msg = document.createElement('div');
            msg.classList.add('flash-message');
            msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
            msg.textContent = message;
            container.appendChild(msg);
            setTimeout(() => {
                msg.style.opacity = '0';
                setTimeout(() => msg.remove(), 500);
            }, duration);
        }


        window.addEventListener('DOMContentLoaded', () => {
            const modal = document.getElementById('confirmationModal');
            const confirmBtn = document.getElementById('confirmDeleteBtn');
            const cancelBtn = document.getElementById('cancelDeleteBtn');
            let adminIdToDelete = null;

            document.querySelectorAll('.delete-admin-form').forEach(form => {
                form.addEventListener('submit', (e) => {
                    e.preventDefault();
                    adminIdToDelete = form.dataset.id;
                    modal.classList.add('visible');
                });
            });

            cancelBtn.addEventListener('click', () => {
                modal.classList.remove('visible');
                adminIdToDelete = null;
            });

            confirmBtn.addEventListener('click', async () => {
                if (!adminIdToDelete) return;

                try {
                    const res = await fetch(`/Admin/delete/${adminIdToDelete}`, {
                        method: 'DELETE',
                        headers: {'Content-Type': 'application/json'}
                    });

                    if (!res.ok) {
                        await handleServerError(res);
                        return;
                    } else {
                        const data = await res.json();
                        showFlashMessage('success', data.message || 'Admin deleted successfully');
                        setTimeout(() => window.location.reload(), 1500);
                    }
                } catch (err) {
                    console.error(err);
                    showFlashMessage('error', 'An error occurred.');
                } finally {
                    modal.classList.remove('visible');
                    adminIdToDelete = null;
                }
            });
        });
    </script>
</body>
</html>