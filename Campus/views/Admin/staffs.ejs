<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>All Staff Members</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        /* --- STYLES FOR CONSISTENT LOOK AND FEEL --- */
        
        :root {
            --primary-color: #1e40af;
            --primary-dark: #1c3d90;
            --secondary-color: #fef7ed;
            --text-dark: #1e293b;
            --text-light: #475569;
            --border-color: #e2e8f0;
            --card-shadow: 0 4px 12px rgba(0,0,0,0.06);
            --success-color: #16a34a;
            --success-light: #dcfce7;
        }

        /* Popups and Flash Messages */
        #errorPopupContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            background: rgba(0, 0, 0, 0.4);
            font-family: 'Montserrat', sans-serif;
        }

        #errorPopupContainer * {
            box-sizing: border-box;
            font-family: inherit;
            margin: 0;
            padding: 0;
        }

        #errorPopupBox {
            max-width: 400px;
            width: 90%;
            padding: 30px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        #errorPopupBox h1 {
            font-size: 3rem;
            font-weight: 700;
            color: #e74c3c;
        }

        #errorPopupBox h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 10px 0;
        }

        #errorMessage {
            font-size: 1rem;
            color: #666;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border-left: 4px solid #e74c3c;
            text-align: left;
            word-wrap: break-word;
        }

        #closeErrorPopup {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 24px;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: pointer;
        }

        #closeErrorPopup:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

        #flashMessageContainer {
            position: fixed; top: 20px; left: 50%;
            transform: translateX(-50%); z-index: 9998; display: flex;
            flex-direction: column; align-items: center; width: 100%;
            max-width: 420px; padding: 0 1rem; pointer-events: none;
        }
        .flash-message {
            padding: 1rem 1.25rem; margin-bottom: 0.75rem; border-radius: 8px;
            font-weight: 600; width: 100%; text-align: center; pointer-events: all;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: fadeIn 0.4s ease;
        }
        .flash-success { background-color: #d1fae5; color: #065f46; border: 1px solid #10b981; }
        .flash-error { background-color: #fee2e2; color: #991b1b; border: 1px solid #ef4444; }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        /* Main Page Styles */
        * {
            box-sizing: border-box; margin: 0; padding: 0;
        }
        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--secondary-color);
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: auto;
            padding: 2rem;
        }
        h1 {
            font-family: 'Inter', sans-serif;
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-dark);
            margin-bottom: 2rem;
            border-bottom: 1px solid var(--border-color);
            padding-bottom: 1.5rem;
        }

        /* Staff List & Card Styles */
        .staff-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 1.5rem;
        }
        .staff-card {
            background: #fff;
            border: 1px solid var(--border-color);
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
        }
        .staff-card p {
            margin: 0.5rem 0;
            color: var(--text-light);
        }
        .staff-card p strong {
            color: var(--text-dark);
            min-width: 110px;
            display: inline-block;
        }
        .staff-card .staff-name {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 1rem;
        }
        .staff-card .status {
            font-weight: 600;
        }
        .staff-card .status.authorized {
            color: var(--success-color);
        }
        
        .staff-actions {
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border-color);
            display: flex;
            flex-wrap: wrap;
            gap: 0.75rem;
        }
        .action-form {
            margin: 0;
        }
        .btn {
            padding: 0.6rem 1.2rem;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.2s ease;
        }
        .btn-secondary {
            background-color: #f1f5f9;
            color: var(--text-light);
        }
        .btn-secondary:hover {
            background-color: #e2e8f0;
        }
        .btn-permissions {
            background-color: #dbeafe;
            color: var(--primary-color);
        }
        .btn-permissions:hover {
            background-color: #bfdbfe;
        }
    </style>
</head>
<body>
    <div id="flashMessageContainer"></div>
    <main class="container">
        <h1>All Staff Members</h1>
        <div class="staff-list">
            <% if (staffs.length === 0) { %>
                <p>No staff members found.</p>
            <% } else { %>
                <% staffs.forEach(staff => { %>
                    <div class="staff-card">
                        <p class="staff-name"><%= staff.name %></p>
                        <p><strong>Email:</strong> <%= staff.email %></p>
                        <p><strong>Phone:</strong> <%= staff.phone %></p>
                        <p><strong>Department:</strong> <%= staff.department %></p>
                        <p><strong>Authorized:</strong> 
                            <span class="status <%= staff.isAuthorized ? 'authorized' : '' %>">
                                <%= staff.isAuthorized ? 'Yes' : 'No' %>
                            </span>
                        </p>

                        <div class="staff-actions">
                            <form method="GET" action="/Admin/staff/edit/<%= staff._id %>" class="action-form">
                                <button type="submit" class="btn btn-secondary">‚úèÔ∏è Edit</button>
                            </form>
                            <form method="GET" action="/Admin/staff/permissions/<%= staff._id %>" class="action-form">
                                <button type="submit" class="btn btn-permissions">üîê Add Permissions</button>
                            </form>
                        </div>
                    </div>
                <% }) %>
            <% } %>
        </div>
    </main>
    <script>
        // Your original JavaScript logic is preserved below
         window.onload = async () => {
            const token = localStorage.getItem('token');
            try {
                const res = await fetch('/Auth/verify-token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (!res.ok) {
                    const contentType = res.headers.get('Content-Type') || '';
                    if (contentType.includes('text/html')) {
                        const html = await res.text();
                        const tempDiv = document.createElement('div');
                        tempDiv.innerHTML = html;
                        const popup = tempDiv.querySelector('#errorPopupContainer');
                        const scripts = tempDiv.querySelectorAll('script');
                        if (popup) {
                            document.body.prepend(popup);
                            scripts.forEach((script) => {
                                const newScript = document.createElement('script');
                                if (script.src) newScript.src = script.src;
                                else newScript.textContent = script.textContent;
                                document.body.appendChild(newScript);
                            });
                        } else {
                            showFlashMessage('error', 'An unknown error occurred.');
                        }
                        setTimeout(() => {
                            window.location.href = '/Staff/login';
                        }, 1500);
                    } else {
                        showFlashMessage('error', 'Server error: unexpected content type.');
                        setTimeout(() => {
                            window.location.href = '/Staff/login';
                        }, 1500);
                    }
                }
            } catch (err) {
                showFlashMessage('error', 'An unknown error occurred.');
            }
             try {
                const payload = JSON.parse(atob(token.split('.')[1]));
                const role = payload.role;
                if (role !== 'Super Admin' && role !== 'Admin') {
                    showFlashMessage('error', 'Unauthorized access.');
                    setTimeout(() => window.location.href = '/Admin/dashboard', 1500);
                }
            } catch (err) {
                console.error('Failed to decode JWT:', err);
                showFlashMessage('error', 'Invalid token.');
            }
        }
        async function handleServerError(res) {
            const contentType = res.headers.get('Content-Type') || '';
            if (contentType.includes('text/html')) {
                const html = await res.text();
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = html;
                const popup = tempDiv.querySelector('#errorPopupContainer');
                if (popup) {
                    document.body.prepend(popup);
                    const scripts = tempDiv.querySelectorAll('script');
                    scripts.forEach((script) => {
                        const newScript = document.createElement('script');
                        if (script.src) newScript.src = script.src;
                        else newScript.textContent = script.textContent;
                        document.body.appendChild(newScript);
                    });
                } else {
                    showFlashMessage('error', 'An unknown error occurred.');
                }
            } else {
                showFlashMessage('error', 'Server error: unexpected content type.');
            }
        }

        function showFlashMessage(type, message, duration = 4000) {
            const container = document.getElementById('flashMessageContainer');
            const msg = document.createElement('div');
            msg.classList.add('flash-message');
            msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
            msg.textContent = message;
            container.appendChild(msg);
            setTimeout(() => {
                msg.style.opacity = '0';
                setTimeout(() => msg.remove(), 500);
            }, duration);
        }

        // document.querySelectorAll('form[action^="/Staff/delete"]').forEach(form => { /* ... existing delete logic ... */ });
         document.querySelectorAll('form[action^="/Staff/delete"]').forEach(form => {
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const confirmed = confirm('Are you sure you want to delete this staff member?');
            if (!confirmed) return;

            try {
            const res = await fetch(form.action, {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json'
                }
            });

            if (!res.ok) return handleServerError(res);

            showFlashMessage('success', 'Staff member deleted.');
            setTimeout(() => location.reload(), 1500);
            } catch (err) {
            showFlashMessage('error', 'Error deleting staff member.');
            }
        });
        });
    </script>
</body>
</html>