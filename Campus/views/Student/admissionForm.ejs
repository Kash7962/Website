<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>College Admission Form</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Droid+Serif:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-Avb2QiuDEEvB4bZJYdft2mNjVShBftLdPG8FJ0V7irTLQ8Uo0qcPxh4Plq7G5tGm0rU+1SPhVotteLpBERwTkw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

  <style>

    #errorPopupContainer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    background: rgba(0, 0, 0, 0.4);
    font-family: 'Montserrat', sans-serif;
  }

  #errorPopupContainer * {
    box-sizing: border-box;
    font-family: inherit;
    margin: 0;
    padding: 0;
  }

  #errorPopupBox {
    max-width: 400px;
    width: 90%;
    padding: 30px;
    border-radius: 10px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(6px);
    border: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    text-align: center;
  }

  #errorPopupBox h1 {
    font-size: 3rem;
    font-weight: 700;
    color: #e74c3c;
  }

  #errorPopupBox h2 {
    font-size: 1.5rem;
    font-weight: 700;
    color: #333;
    margin: 10px 0;
  }

  #errorMessage {
    font-size: 1rem;
    color: #666;
    background-color: #ffffff;
    padding: 15px;
    border-radius: 5px;
    margin: 20px 0;
    border-left: 4px solid #e74c3c;
    text-align: left;
    word-wrap: break-word;
  }

  #closeErrorPopup {
    display: inline-block;
    margin-top: 10px;
    padding: 10px 24px;
    background-color: #3498db;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    font-weight: bold;
    transition: background-color 0.3s ease, transform 0.2s ease;
    cursor: pointer;
  }

  #closeErrorPopup:hover {
    background-color: #2980b9;
    transform: translateY(-2px);
  }

   #flashMessageContainer {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9998;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 420px;
    padding: 0 1rem;
    pointer-events: none;
  }

  .flash-message {
    padding: 1rem 1.25rem;
    margin-bottom: 0.75rem;
    border-radius: 8px;
    font-weight: 600;
    width: 100%;
    text-align: center;
    pointer-events: all;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    animation: fadeIn 0.4s ease;
  }

  .flash-success {
    background-color: #d1fae5;
    color: #065f46;
    border: 1px solid #10b981;
  }

  .flash-error {
    background-color: #fee2e2;
    color: #991b1b;
    border: 1px solid #ef4444;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }

    * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Droid Serif', serif;
  background-color: #fef7ed;
  color: #333;
}

.page-header {
  background: linear-gradient(135deg, #1e40af, #3b82f6);
  color: white;
  padding: 4rem 0;
  text-align: center;
  position: relative;
}

.page-header h1 {
  font-family: 'Inter', sans-serif;
  font-size: 2.5rem;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
}

.back-icon-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  background-color: rgba(255, 255, 255, 0.15);
  color: white;
  text-decoration: none;
  border-radius: 8px;
  font-size: 18px;
  position: absolute;
  top: 1rem;
  left: 1rem;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.back-icon-button i {
  pointer-events: none;
}

.back-icon-button:hover {
  background-color: rgba(0, 255, 0, 0.25);
  transform: scale(1.05);
}

.container {
  max-width: 960px;
  margin: 3rem auto;
  background: #ffffff;
  padding: 2.5rem;
  border-radius: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

h3 {
  font-family: 'Inter', sans-serif;
  font-size: 1.5rem;
  font-weight: 600;
  color: #1e40af;
  border-bottom: 2px solid #f97316;
  margin: 2.5rem 0 1.5rem;
  padding-bottom: 0.5rem;
  grid-column: 1 / -1;
}

h3:first-of-type {
  margin-top: 0;
}

form {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1.5rem 2rem;
}

.form-group {
  display: flex;
  flex-direction: column;
}

label {
  margin-bottom: 0.5rem;
  font-weight: 600;
  color: #4b5563;
  font-size: 0.9rem;
}

input[type="text"],
input[type="date"],
input[type="email"],
input[type="tel"],
select {
  padding: 0.75rem 1rem;
  font-size: 1rem;
  font-family: 'Droid Serif', serif;
  border: 1px solid #d1d5db;
  border-radius: 8px;
  transition: border-color 0.3s, box-shadow 0.3s;
}

input:focus,
select:focus {
  outline: none;
  border-color: #f97316;
  box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.2);
}

.radio-group {
  display: flex;
  align-items: center;
  gap: 2rem;
  padding-top: 0.5rem;
}

.radio-group label {
  font-weight: normal;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.error {
  color: #dc2626;
  font-size: 0.9rem;
  margin-top: 5px;
}

button[type="submit"] {
  background-color: #f97316;
  color: white;
  padding: 0.8rem;
  border: none;
  border-radius: 8px;
  font-size: 1.1rem;
  font-weight: 600;
  font-family: 'Inter', sans-serif;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-top: 2rem;
  grid-column: 1 / -1;
}

button[type="submit"]:hover {
  background-color: #ea580c;
}

@media (max-width: 600px) {
  .page-header {
    padding: 3rem 1rem;
  }

  .container {
    padding: 1.5rem;
    margin: 1.5rem auto;
  }

  .page-header h1 {
    font-size: 2rem;
  }

  h3 {
    font-size: 1.3rem;
  }

  form {
    grid-template-columns: 1fr;
  }

  .back-icon-button {
    top: 0.75rem;
    left: 0.75rem;
    width: 36px;
    height: 36px;
    font-size: 16px;
  }
}
  </style>
</head>
<body>
   <div id="flashMessageContainer" style="position: fixed; top: 20px; left: 50%; transform: translateX(-50%); z-index: 9999;"></div>
  <header class="page-header">
  <div class="header-container">
    <a href="/" class="back-icon-button" aria-label="Go Back">
      <i class="fas fa-arrow-left"></i>
    </a>
    <h1>College Admission Form</h1>
  </div>
</header>

  <div class="container">
    <form id="admissionForm">

      <h3>Course Information</h3>
      <div class="form-group">
        <label for="course">Course *</label>
        <select id="course" name="course" required>
          <option value="">Select a Course</option>
          <option value="+2 (Science)">+2 (Science)</option>
          <option value="+3 (Science)">+3 (Science)</option>
          <option value="Vocational Skill Development">Vocational Skill Development</option>
        </select>
      </div>

      <h3>Student Information</h3>
      <div class="form-group">
        <label for="firstName">First Name *</label>
        <input type="text" id="firstName" name="firstName" required>
      </div>
      <div class="form-group">
        <label for="middleName">Middle Name</label>
        <input type="text" id="middleName" name="middleName">
      </div>
      <div class="form-group">
        <label for="lastName">Last Name *</label>
        <input type="text" id="lastName" name="lastName" required>
      </div>
      <div class="form-group">
        <label>Gender *</label>
        <div class="radio-group">
          <label><input type="radio" name="gender" value="male" required> Male</label>
          <label><input type="radio" name="gender" value="female"> Female</label>
        </div>
      </div>
      <div class="form-group">
        <label for="studentEmail">Student Email *</label>
        <input type="email" id="studentEmail" name="studentEmail">
      </div>
      <div class="form-group">
        <label for="dob">Date of Birth *</label>
        <input type="date" id="dob" name="dob" required>
      </div>
      <div class="form-group">
        <label for="studentPhone">Contact Number *</label>
        <input type="tel" id="studentPhone" name="studentPhone" required placeholder="Enter 10-digit number">
        <span class="error" id="studentPhoneError"></span>
      </div>

      <h3>Guardian Information</h3>
      <div class="form-group">
        <label for="guardian1Name">First Guardian Name *</label>
        <input type="text" id="guardian1Name" name="guardian1Name" required>
      </div>
      <div class="form-group">
        <label for="guardian1Relation">Relation *</label>
        <select id="guardian1Relation" name="guardian1Relation" required>
          <option value="">Select Relation</option>
          <option>Father</option>
          <option>Mother</option>
          <option>Brother</option>
          <option>Sister</option>
          <option>Other</option>
        </select>
      </div>
      <div class="form-group">
        <label for="guardian1Email">First Guardian Email</label>
        <input type="email" id="guardian1Email" name="guardian1Email">
      </div>
      <div class="form-group">
        <label for="guardianPhone">First Guardian Contact *</label>
        <input type="tel" id="guardianPhone" name="guardian1Phone" required placeholder="Enter 10-digit number">
        <span class="error" id="guardianPhoneError"></span>
      </div>
      <div class="form-group">
        <label for="guardian2Name">Second Guardian Name</label>
        <input type="text" id="guardian2Name" name="guardian2Name">
      </div>
      <div class="form-group">
        <label for="guardian2Relation">Second Guardian Relation</label>
        <select id="guardian2Relation" name="guardian2Relation">
          <option value="">Select Relation</option>
          <option>Father</option>
          <option>Mother</option>
          <option>Brother</option>
          <option>Sister</option>
          <option>Other</option>
        </select>
      </div>

      <h3>Contact Information</h3>
      <div class="form-group">
        <label for="address1">Address Line 1 *</label>
        <input type="text" id="address1" name="address1" required>
      </div>
      <div class="form-group">
        <label for="address2">Address Line 2</label>
        <input type="text" id="address2" name="address2">
      </div>
      <div class="form-group">
        <label for="city">City *</label>
        <input type="text" id="city" name="city" required>
      </div>
      <div class="form-group">
        <label for="state">State *</label>
        <input type="text" id="state" name="state" required>
      </div>
      <div class="form-group">
        <label for="zipcode">Zipcode *</label>
        <input type="text" id="zipcode" name="zipcode" required>
      </div>
      <div class="form-group">
        <label for="country">Country *</label>
        <input type="text" id="country" name="country" required>
      </div>

      <button type="submit">Submit Application</button>
    </form>
  </div>

  <script>
    const form = document.getElementById('admissionForm');

    form.addEventListener('submit', async function (e) {
      e.preventDefault();

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      try {
        const res = await fetch('/Student/admissionForm', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });

        if (!res.ok) {
        const contentType = res.headers.get('Content-Type') || '';

        if (contentType.includes('text/html')) {
          const html = await res.text();
          const tempDiv = document.createElement('div');
          tempDiv.innerHTML = html;

          const popup = tempDiv.querySelector('#errorPopupContainer');
          const scripts = tempDiv.querySelectorAll('script');

          if (popup) {
            document.body.prepend(popup);

            // Re-execute any inline scripts inside the error page
            scripts.forEach((script) => {
              const newScript = document.createElement('script');
              if (script.src) {
                newScript.src = script.src;
              } else {
                newScript.textContent = script.textContent;
              }
              document.body.appendChild(newScript);
            });
          } else {
            // alert('An unknown error occurred.');
             showFlashMessage('error', 'An unknown error occurred. Please try again later.');
          }

          return;
        }

        // alert('Server error: unexpected content type.');
         showFlashMessage('error', 'Server error: unexpected content type. Please try again later.');
      }


        if (res.ok) {
          const result = await res.json();
          // alert(result.message || 'Application submitted successfully!');
           showFlashMessage('success', 'Application submitted successfully!');
          form.reset();
        } else {
          const error = await res.json();
          // alert(error.message || 'Submission failed. Please check your input.');
           showFlashMessage('error', 'Submission failed. Please check your input.');
        }
      } catch (err) {
        console.error(err);
        // alert('An error occurred. Please try again later.');
         showFlashMessage('error', 'An error occurred. Please try again later.');
      }
    });

    function showFlashMessage(type, message, duration = 4000) {
    const container = document.getElementById('flashMessageContainer');
    const msg = document.createElement('div');
    msg.classList.add('flash-message');
    msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
    msg.textContent = message;

    container.appendChild(msg);

    setTimeout(() => {
      msg.style.opacity = '0';
      msg.style.transform = 'translateY(-10px)';
      setTimeout(() => msg.remove(), 500);
    }, duration);
    }
    async function getClientIP() {
    const res = await fetch('https://api.ipify.org?format=json');
    const data = await res.json();
    return data.ip;
  }

  </script>


</body>
</html>
