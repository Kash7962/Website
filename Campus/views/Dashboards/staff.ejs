<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Staff Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Droid+Serif:wght@400;700&display=swap" rel="stylesheet">
    <style>
         #errorPopupContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            background: rgba(0, 0, 0, 0.4);
            font-family: 'Montserrat', sans-serif;
        }

        #errorPopupContainer * {
            box-sizing: border-box;
            font-family: inherit;
            margin: 0;
            padding: 0;
        }

        #errorPopupBox {
            max-width: 400px;
            width: 90%;
            padding: 30px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        #errorPopupBox h1 {
            font-size: 3rem;
            font-weight: 700;
            color: #e74c3c;
        }

        #errorPopupBox h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 10px 0;
        }

        #errorMessage {
            font-size: 1rem;
            color: #666;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border-left: 4px solid #e74c3c;
            text-align: left;
            word-wrap: break-word;
        }

        #closeErrorPopup {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 24px;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: pointer;
        }

        #closeErrorPopup:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }

        #flashMessageContainer {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 9998;
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 420px;
            padding: 0 1rem;
            pointer-events: none;
        }

        .flash-message {
            padding: 1rem 1.25rem;
            margin-bottom: 0.75rem;
            border-radius: 8px;
            font-weight: 600;
            width: 100%;
            text-align: center;
            pointer-events: all;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: fadeIn 0.4s ease;
        }

        .flash-success {
            background-color: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
        }

        .flash-error {
            background-color: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #fef7ed;
            color: #333;
            overflow-x: hidden;
        }

        .dashboard {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: #374151;
            color: white;
            position: fixed;
            height: 100vh;
            left: 0;
            top: 0;
            transition: transform 0.3s ease;
            z-index: 1000;
            overflow-y: auto;
        }

        .sidebar.closed {
            transform: translateX(-100%);
        }

        .sidebar .brand {
            padding: 1.5rem;
            font-size: 1.5rem;
            font-weight: 700;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            background: #1f2937;
        }

        .sidebar nav {
            padding: 1rem 0;
        }

        .sidebar nav a {
            display: flex;
            align-items: center;
            color: #e5e7eb;
            text-decoration: none;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }

        .sidebar nav a:hover {
            background-color: #4b5563;
            border-left-color: #3b82f6;
            color: white;
        }

        .sidebar nav a.active {
            background-color: #3b82f6;
            border-left-color: #1d4ed8;
            color: white;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 280px;
            transition: margin-left 0.3s ease;
        }

        .main-content.expanded {
            margin-left: 0;
        }

        /* Top Header */
        .top-header {
            background: #1e40af;
            color: white;
            padding: 1rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .menu-toggle {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 0.5rem;
        }

        .search-logout {
            display: flex;
            gap: 0.75rem;
            align-items: center;
            flex-grow: 1; 
            justify-content: flex-end;
        }

        .search-logout input {
            padding: 0.6rem 0.8rem;
            border: none;
            border-radius: 6px;
            background-color: rgba(255, 255, 255, 0.9);
            color: #333;
            width: 200px;
        }

        .search-logout input::placeholder {
            color: #6b7280;
        }

        .search-logout button {
            padding: 0.6rem 1rem;
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .search-logout button:hover {
            background-color: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.5);
        }
        
        #logoutBtn {
            margin-left: auto;
        }

        /* Main Dashboard Content */
        .main {
            padding: 2rem;
        }

        .cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2.5rem;
        }

        .card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            border-top: 4px solid #1e40af;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.12);
        }

        .card p:first-child {
            font-weight: 600;
            color: #64748b;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
        }

        .card .amount {
            font-size: 2.2rem;
            font-weight: 700;
            color: #1e3a8a;
        }

        /* Table */
        .table-container {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            overflow-x: auto;
        }

        .table-container h3 {
            margin-bottom: 1.5rem;
            font-family: 'Inter', sans-serif;
            color: #1f2937;
            font-size: 1.25rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            text-align: left;
            padding: 1rem;
            border-bottom: 1px solid #f1f5f9;
        }

        th {
            background-color: #f8fafc;
            font-size: 0.85rem;
            text-transform: uppercase;
            color: #64748b;
            font-weight: 600;
        }

        tbody tr:hover {
            background-color: #f8fafc;
        }

        .status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.8rem;
        }
        
        /* Status styles for this specific page */
        .status.present { background-color: #d1fae5; color: #065f46; }
        .status.leave { background-color: #fee2e2; color: #991b1b; }
        .status.Read { background-color: #dbeafe; color: #1e40af; }
        .status.Unread { background-color: #fef3c7; color: #92400e; }


        .edit-btn {
            background-color: #3b82f6;
            color: white;
            padding: 6px 12px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            transition: background-color 0.3s ease;
        }

        .edit-btn:hover {
            background-color: #2563eb;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1001;
            left: 0; 
            top: 0;
            width: 100%; 
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white; 
            padding: 2rem; 
            border-radius: 12px;
            width: 90%; 
            max-width: 450px; 
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }

        .modal-content h3 { 
            font-size: 1.5rem; 
            color: #1e40af; 
            margin-bottom: 1.5rem; 
        }

        .modal-content input, 
        .modal-content select { 
            width: 100%; 
            padding: 0.75rem; 
            margin: 0.5rem 0 1rem 0; 
            border: 1px solid #d1d5db; 
            border-radius: 8px; 
            font-size: 1rem; 
        }

        .modal-buttons { 
            display: flex; 
            gap: 1rem; 
            justify-content: flex-end; 
            margin-top: 1rem; 
        }

        .modal-buttons button { 
            padding: 0.6rem 1.2rem; 
            border: none; 
            border-radius: 8px; 
            font-weight: 600; 
            cursor: pointer; 
        }

        .modal-buttons .save { 
            background-color: #1e40af; 
            color: white; 
        }

        .modal-buttons .cancel { 
            background-color: #e5e7eb; 
            color: #334155; 
        }

        /* Overlay for mobile */
        .sidebar-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .menu-toggle {
                display: block;
            }

            .sidebar-overlay.active {
                display: block;
            }

            .top-header {
                flex-direction: column;
                align-items: stretch;
            }

            .search-logout {
                margin-top: 1rem;
                flex-wrap: wrap;
                justify-content: flex-start;
            }

            .search-logout input {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .cards {
                grid-template-columns: 1fr;
            }

            table, thead, tbody, th, td, tr { 
                display: block; 
            }

            thead tr { 
                display: none; 
            }

            tr { 
                border: 1px solid #e5e7eb; 
                border-radius: 8px; 
                margin-bottom: 1rem; 
                padding: 0.5rem;
            }

            td { 
                padding-left: 50%; 
                position: relative; 
                border: none; 
                border-bottom: 1px solid #f1f5f9; 
            }

            td:last-child { 
                border-bottom: none; 
            }

            td::before {
                content: attr(data-label);
                position: absolute;
                left: 0;
                width: 45%;
                padding-left: 1rem;
                font-weight: bold;
                white-space: nowrap;
            }
        }

        @media (max-width: 480px) {
            .main {
                padding: 1rem;
            }

            .search-logout button {
                padding: 0.5rem 0.8rem;
                font-size: 0.9rem;
            }
        }
    </style>
</head>
<body>
     <div id="flashMessageContainer" style="position: fixed; top: 20px; left: 50%; transform: translateX(-50%); z-index: 9999;"></div>
    <div class="dashboard">
        <div class="sidebar" id="sidebar">
            <div class="brand">Teaching Dashboard</div>
            <nav>
                <a href="/Staff/dashboard/" class="active">🏠 Dashboard</a>
                <!-- <a href="/Staff/Teaching/profile">👤 Manage Profile</a> -->
                <!-- <a href="/Staff/Teaching/manage-courses">📚 Manage Courses</a>
                <a href="/Staff/Teaching/students">👥 Students</a>
                <a href="/Staff/Teaching/assignments">📝 Assignment</a>
                <a href="#">💬 Communication Tools</a>
                <a href="/Staff/Leave/dashboard">✈️ Leave Requests</a> -->
                <a href="/Manage/pending-enrollment" data-permission="enroll_students">🎓 Enroll Students</a>
                <a href="/Manage/studentsEnrolled" data-permission="edit_students">📝 Edit Students</a>
                <a href="/Manage/payment" data-permission="students_payment">💰 Manage Payments</a>
                <!-- <a href="/Manage/join" data-permission="direct_join_students">➕🎓 Direct Join Students</a> -->
            </nav>
        </div>

        <div class="sidebar-overlay" id="sidebarOverlay"></div>

        <div class="main-content" id="mainContent">
            <div class="top-header">
                <button class="menu-toggle" id="menuToggle">☰</button>
                <div class="search-logout">
                    <input type="text" placeholder="Search..." />
                    <button id="changePasswordBtn">Change Password</button>
                    <button id="profile">Profile</button>
                    <button id="logoutBtn">Log Out</button>
                </div>
            </div>

            <div class="main">
                <div class="welcome-message" style="margin-bottom: 2rem;">
                    <h2 id="welcomeText" style="font-size: 1.8rem; color: #1e3a8a;">Welcome, [Teacher Name]</h2>
                    <p style="font-size: 1rem; color: #475569; margin-top: 0.5rem;">Here is your professional overview.</p>
                </div>

                <div class="cards">
                    <div class="card">
                        <p>Full Name</p>
                        <p class="amount" id="teacherName">--</p>
                    </div>
                    <div class="card">
                        <p>Department</p>
                        <p class="amount" id="teacherDept">--</p>
                    </div>
                    <div class="card">
                        <p>Class Assigned</p>
                        <p class="amount" id="teacherClassAssigned">--</p>
                    </div>
                    <div class="card">
                        <p>Designation</p>
                        <p class="amount" id="teacherDesignation">--</p>
                    </div>
                </div>

                <div class="table-container">
                    <h3 style="margin-bottom: 15px;">Recent Notifications / Updates</h3>
                    <table id="notifications-table">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Title</th>
                                <th>Category</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td data-label="Date">2025-08-04</td>
                                <td data-label="Title">Mid-term grades due</td>
                                <td data-label="Category">Academics</td>
                                <td data-label="Status"><span class="status Unread">Unread</span></td>
                                <td data-label="Action"><button class="edit-btn" onclick="editRow(this)">View</button></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="editModal">
        <div class="modal-content">
            <h3>Edit Record</h3>
            <input type="text" id="edit-date" placeholder="Date">
            <input type="text" id="edit-title" placeholder="Title">
            <input type="text" id="edit-category" placeholder="Category">
            <select id="edit-status">
                <option value="Read">Read</option>
                <option value="Unread">Unread</option>
            </select>
            <div class="modal-buttons">
                <button class="cancel" onclick="closeModal()">Cancel</button>
                <button class="save" onclick="saveEdit()">Save Changes</button>
            </div>
        </div>
    </div>

    <script>
        let currentRow;

        // Mobile menu toggle
        const menuToggle = document.getElementById('menuToggle');
        const sidebar = document.getElementById('sidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');
        
        menuToggle.addEventListener('click', function() {
            sidebar.classList.toggle('open');
            sidebarOverlay.classList.toggle('active');
        });

        sidebarOverlay.addEventListener('click', function() {
            sidebar.classList.remove('open');
            sidebarOverlay.classList.remove('active');
        });

        // Close sidebar when clicking on nav links on mobile
        const navLinks = document.querySelectorAll('.sidebar nav a');
        navLinks.forEach(link => {
            link.addEventListener('click', function() {
                if (window.innerWidth <= 768) {
                    sidebar.classList.remove('open');
                    sidebarOverlay.classList.remove('active');
                }
            });
        });

        // Handle window resize
        window.addEventListener('resize', function() {
            if (window.innerWidth > 768) {
                sidebar.classList.remove('open');
                sidebarOverlay.classList.remove('active');
            }
        });

        // Modal Functions
        function editRow(btn) {
            currentRow = btn.closest("tr");
            document.getElementById("edit-date").value = currentRow.cells[0].innerText;
            document.getElementById("edit-title").value = currentRow.cells[1].innerText;
            document.getElementById("edit-category").value = currentRow.cells[2].innerText;
            
            const statusText = currentRow.cells[3].querySelector('.status').innerText;
            document.getElementById("edit-status").value = statusText;
            
            document.getElementById("editModal").style.display = "flex";
        }

        function closeModal() {
            document.getElementById("editModal").style.display = "none";
        }

        function saveEdit() {
            currentRow.cells[0].innerText = document.getElementById("edit-date").value;
            currentRow.cells[1].innerText = document.getElementById("edit-title").value;
            currentRow.cells[2].innerText = document.getElementById("edit-category").value;
            
            const newStatus = document.getElementById("edit-status").value;
            const statusSpan = currentRow.cells[3].querySelector('.status');
            statusSpan.innerText = newStatus;
            statusSpan.className = 'status ' + newStatus;
            
            closeModal();
        }
        window.onload = async function () {
             const token = localStorage.getItem('token');
            //  console.log(token)
            // if (!token){
            //     showFlashMessage('error', 'Authentication failed. Redirecting to login page.');
            //         // alert('Authentication failed. Redirecting to login page.');
            //         // window.location.href = '/Staff/login';
            //          setTimeout(() =>  window.location.href = '/Staff/login', 1500)
            // }
            
                try {
                    const res = await fetch('/Auth/verify-token', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        }
                    });
                    // console.log(res)
                   if (!res.ok) {
                    const contentType = res.headers.get('Content-Type') || '';

                    if (contentType.includes('text/html')) {
                    const html = await res.text();
                    const tempDiv = document.createElement('div');
                    tempDiv.innerHTML = html;

                    const popup = tempDiv.querySelector('#errorPopupContainer');
                    const scripts = tempDiv.querySelectorAll('script');

                    if (popup) {
                        document.body.prepend(popup);
                        scripts.forEach((script) => {
                        const newScript = document.createElement('script');
                        if (script.src) {
                            newScript.src = script.src;
                        } else {
                            newScript.textContent = script.textContent;
                        }
                        document.body.appendChild(newScript);
                        });
                        setTimeout(() =>  window.location.href = '/Staff/login', 1500)
                    } else {
                        // alert('An unknown error occurred.');
                        showFlashMessage('error', 'An unknown error occurred.');
                        setTimeout(() =>  window.location.href = '/Staff/login', 1500)
                    }

                    return;
                    }

                    // alert('Server error: unexpected content type.');
                    showFlashMessage('error', 'Server error: unexpected content type.');
                    setTimeout(() =>  window.location.href = '/Staff/login', 1500)
                }
        
                    const payload = JSON.parse(atob(token.split('.')[1]));
                    const role = payload.department;
                    // console.log(role);
                    const allowedDepartments = ['Academic', 'Residential', 'Library', 'Kitchen', 'Sports'];

                    if (!allowedDepartments.includes(role)) {
                        showFlashMessage('error', 'You are not authorized to access this page.');
                        setTimeout(() => window.location.href = '/Staff/login', 1500);
                        return;
                    }
                    // } else {
                    //      showFlashMessage('success', 'Welcome to the Admin dashboard.');
                    // }
                } catch (error) {
                    console.error('Auth error:', error);
                    localStorage.removeItem('token'); // Clear invalid token
                    showFlashMessage('error', 'Authentication failed. Redirecting to login page.');
                    // alert('Authentication failed. Redirecting to login page.');
                    // window.location.href = '/Staff/login';
                     setTimeout(() =>  window.location.href = '/Staff/login', 1500)
                    return;
                }

                const logoutBtn = document.getElementById('logoutBtn');
                if (!logoutBtn) {
                    console.warn('Logout button not found');
                    return;
                }
        
            logoutBtn.addEventListener('click', async function () {
                console.log('Logout button clicked');
                try {
                    const res = await fetch('/Staff/logout', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                    });
                    if (!res.ok) {
                    const contentType = res.headers.get('Content-Type') || '';

                    if (contentType.includes('text/html')) {
                    const html = await res.text();
                    const tempDiv = document.createElement('div');
                    tempDiv.innerHTML = html;

                    const popup = tempDiv.querySelector('#errorPopupContainer');
                    const scripts = tempDiv.querySelectorAll('script');

                    if (popup) {
                        document.body.prepend(popup);
                        scripts.forEach((script) => {
                        const newScript = document.createElement('script');
                        if (script.src) {
                            newScript.src = script.src;
                        } else {
                            newScript.textContent = script.textContent;
                        }
                        document.body.appendChild(newScript);
                        });
                    } else {
                        // alert('An unknown error occurred.');
                        showFlashMessage('error', 'An unknown error occurred.');
                    }

                    return;
                    }

                    // alert('Server error: unexpected content type.');
                    showFlashMessage('error', 'Server error: unexpected content type.');
                    }
                    if (res.ok) {
                        localStorage.removeItem('token');
                        // alert('Logged out successfully!');
                        showFlashMessage('success', 'Logged out successfully!');
                        setTimeout(() =>  window.location.href = '/Staff/login', 1500)
                        // window.location.href = '/Staff/login';
                    } else {
                        alert('Logout failed. Please try again.');
                    }
                } catch (err) {
                    console.error('Logout error:', err);
                    alert('Logout failed. Please try again.');
                }
            });
                try {
                    const token = localStorage.getItem('token');
                    if (!token) {
                    console.error('No token found');
                    return;
                    }
                    // console.log('Token:', token);
                    // Decode JWT to get staffId
                    const payload = JSON.parse(atob(token.split('.')[1]));
                    const staffId = payload._id;
                    
                    const res = await fetch('/Manage/get-permissions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ staffId })
                    });

                    if (!res.ok) {
                    handleServerError(res);
                    return;
                    }

                    const data = await res.json();
                    const permissions = data.permissions || [];
                    // console.log('Permissions:', permissions);
                    // Hide all menu items not in permissions
                    document.querySelectorAll('[data-permission]').forEach(item => {
                    const requiredPerm = item.getAttribute('data-permission');
                    if (!permissions.includes(requiredPerm)) {
                        item.style.display = 'none';
                    }
                    });

                } catch (err) {
                    console.error('Error fetching permissions:', err);
                }
       

            }
         
                document.getElementById('changePasswordBtn').addEventListener('click', () => {
                    window.location.href = '/Staff/change-password';
                });

                function showFlashMessage(type, message, duration = 4000) {
                const container = document.getElementById('flashMessageContainer');
                const msg = document.createElement('div');
                msg.classList.add('flash-message');
                msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
                msg.textContent = message;

                container.appendChild(msg);

                setTimeout(() => {
                msg.style.opacity = '0';
                msg.style.transform = 'translateY(-10px)';
                setTimeout(() => msg.remove(), 500);
                }, duration);
            }

            document.getElementById('profile').addEventListener('click', () => {
                    window.location.href = '/Admin/profile';
                });

            async function handleServerError(res) {
            const contentType = res.headers.get('Content-Type') || '';

            if (contentType.includes('text/html')) {
            const html = await res.text();
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = html;

            const popup = tempDiv.querySelector('#errorPopupContainer');
            const scripts = tempDiv.querySelectorAll('script');

            if (popup) {
                document.body.prepend(popup);
                scripts.forEach((script) => {
                const newScript = document.createElement('script');
                if (script.src) newScript.src = script.src;
                else newScript.textContent = script.textContent;
                document.body.appendChild(newScript);
                });
            } else {
                showFlashMessage('error', 'An unknown error occurred.');
            }
            } else {
            showFlashMessage('error', 'Server error: unexpected content type.');
            }
        }
    </script>
</body>
</html>