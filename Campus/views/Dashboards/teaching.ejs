<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Staff Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Droid+Serif:wght@400;700&display=swap" rel="stylesheet">
    <style>
        /* --- START OF NEW CSS --- */
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #fef7ed; /* Light background from your main site */
            color: #333;
        }

        .dashboard {
            min-height: 100vh;
        }

        /* Navbar */
        .navbar {
            background: #1e40af; /* KASH theme blue */
            color: white;
            padding: 1rem 1.5rem;
        }

        .navbar .top {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .navbar .brand {
            font-size: 1.5rem;
            font-weight: 700;
        }

        .navbar nav {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 1rem;
            border-top: 1px solid rgba(255, 255, 255, 0.2);
            padding-top: 1rem;
        }

        .navbar nav a {
            color: #e2e8f0;
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-weight: 600;
            transition: background-color 0.3s;
        }

        .navbar nav a:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .navbar .search-logout {
            display: flex;
            gap: 0.75rem;
            align-items: center;
        }

        .navbar input {
            padding: 0.6rem 0.8rem;
            border: none;
            border-radius: 6px;
            background-color: rgba(255, 255, 255, 0.9);
            color: #333;
        }
        
        .navbar input::placeholder {
            color: #6b7280;
        }

        .navbar button {
            padding: 0.6rem 1rem;
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
            border: 1px solid white;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: background-color 0.3s;
        }
        .navbar button:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        /* Main Content */
        .main {
            padding: 2rem;
        }

        .cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2.5rem;
        }

        .card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            border-top: 4px solid #1e40af;
        }
        
        .card p:first-child {
            font-weight: 600;
            color: #64748b;
            margin-bottom: 0.5rem;
        }
        
        .card .amount {
            font-size: 2rem;
            font-weight: 700;
            color: #1e3a8a;
        }

        /* Table */
        .table-container {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            text-align: left;
            padding: 1rem;
            border-bottom: 1px solid #f1f5f9;
        }

        th {
            background-color: #f8fafc;
            font-size: 0.85rem;
            text-transform: uppercase;
            color: #64748b;
        }
        
        tbody tr:hover {
            background-color: #f8fafc;
        }
        
        .status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.8rem;
        }
        .status.present { background-color: #d1fae5; color: #065f46; }
        .status.leave { background-color: #fee2e2; color: #991b1b; }

        .edit-btn {
            background-color: #3b82f6;
            color: white;
            padding: 6px 12px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
        }

        .download-btn {
            margin-top: 1.5rem;
            display: flex;
            justify-content: flex-end;
        }

        .download-btn button {
            background-color: #f97316; /* KASH theme orange */
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .download-btn button:hover {
            background-color: #ea580c;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1001;
            left: 0; top: 0;
            width: 100%; height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background: white; padding: 2rem; border-radius: 12px;
            width: 90%; max-width: 450px; box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        .modal-content h3 { font-size: 1.5rem; color: #1e40af; margin-bottom: 1.5rem; }
        .modal-content input, .modal-content select { width: 100%; padding: 0.75rem; margin: 0.5rem 0 1rem 0; border: 1px solid #d1d5db; border-radius: 8px; font-size: 1rem; }
        
        .modal-buttons { display: flex; gap: 1rem; justify-content: flex-end; margin-top: 1rem; }
        .modal-buttons button { padding: 0.6rem 1.2rem; border: none; border-radius: 8px; font-weight: 600; cursor: pointer; }
        .modal-buttons .save { background-color: #1e40af; color: white; }
        .modal-buttons .cancel { background-color: #e5e7eb; color: #334155; }

        /* Responsive table from your original code, kept as is */
        @media (max-width: 768px) {
            .navbar .top { flex-direction: column; align-items: stretch; }
            .navbar nav, .navbar .search-logout { margin-top: 1rem; }
            table, thead, tbody, th, td, tr { display: block; }
            thead tr { display: none; }
            tr { border: 1px solid #e5e7eb; border-radius: 8px; margin-bottom: 1rem; }
            td { padding-left: 50%; position: relative; border: none; border-bottom: 1px solid #f1f5f9; }
            td:last-child { border-bottom: none; }
            td::before {
                content: attr(data-label);
                position: absolute;
                left: 0;
                width: 45%;
                padding-left: 1rem;
                font-weight: bold;
                white-space: nowrap;
            }
        }
        /* --- END OF NEW CSS --- */
    </style>
</head>
<body>
  <div class="dashboard">
    <div class="navbar">
      <div class="top">
        <div class="brand">Teaching Dashboard</div>
        <div class="search-logout">
          <input type="text" placeholder="Search..." />
          <button id="changePasswordBtn">Change Password</button>
          <button id="logoutBtn">Log Out</button>
        </div>
      </div>
      <nav>
        <a href="/Staff/Teaching/profile">Manage Profile</a>
        <a href="/Staff/Teaching/manage-courses">Manage Courses</a>
        <a href="/Staff/Teaching/students">Students</a>
        <a href="/Staff/Teaching/assignments">Assignment</a>
        <a href="#">Communication Tools</a>
        <a href="/Staff/Leave/dashboard">Leave Requests</a>
      </nav>
    </div>

    <div class="welcome-message" style="margin-bottom: 2rem;">
  <h2 id="welcomeText" style="font-size: 1.8rem; color: #1e3a8a;">Welcome, [Teacher Name]</h2>
  <p style="font-size: 1rem; color: #475569; margin-top: 0.5rem;">Here is your professional overview.</p>
</div>

<div class="cards">
  <div class="card">
    <p>Full Name</p>
    <p class="amount" id="teacherName">--</p>
  </div>
  <div class="card">
    <p>Department</p>
    <p class="amount" id="teacherDept">--</p>
  </div>
 <div class="card">
  <p>Class Assigned</p>
  <p class="amount" id="teacherClassAssigned">--</p>
</div>
<div class="card">
  <p>Designation</p>
  <p class="amount" id="teacherDesignation">--</p>
</div>

</div>
      <div class="table-container">
        <h3 style="margin-bottom: 15px;">Recent Notifications / Updates</h3>
        <table id="notifications-table">
          <thead>
            <tr>
              <th>Date</th>
              <th>Title</th>
              <th>Category</th>
              <th>Status</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            <!-- Dynamic rows will be injected here later -->
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <div class="modal" id="editModal">
    <div class="modal-content">
      <h3>Edit Record</h3>
      <input type="text" id="edit-date" placeholder="Date">
      <input type="text" id="edit-title" placeholder="Title">
      <input type="text" id="edit-category" placeholder="Category">
      <select id="edit-status">
        <option value="Read">Read</option>
        <option value="Unread">Unread</option>
      </select>
      <div class="modal-buttons">
        <button class="cancel" onclick="closeModal()">Cancel</button>
        <button class="save" onclick="saveEdit()">Save Changes</button>
      </div>
    </div>
  </div>

  <script>
    let currentRow;

    function editRow(btn) {
      currentRow = btn.closest("tr");
      document.getElementById("edit-date").value = currentRow.cells[0].innerText;
      document.getElementById("edit-title").value = currentRow.cells[1].innerText;
      document.getElementById("edit-category").value = currentRow.cells[2].innerText;
      document.getElementById("edit-status").value = currentRow.cells[3].innerText;
      document.getElementById("editModal").style.display = "flex";
    }

    function closeModal() {
      document.getElementById("editModal").style.display = "none";
    }

    function saveEdit() {
      currentRow.cells[0].innerText = document.getElementById("edit-date").value;
      currentRow.cells[1].innerText = document.getElementById("edit-title").value;
      currentRow.cells[2].innerText = document.getElementById("edit-category").value;
      currentRow.cells[3].innerText = document.getElementById("edit-status").value;
      closeModal();
    }
  </script>

  <script>
    window.onload = function () {
      const token = localStorage.getItem('token');
      const logoutBtn = document.getElementById('logoutBtn');

      if (!token) {
        alert('You are not logged in. Redirecting to login page.');
        window.location.href = '/Staff/login';
        return;
      }

      try {
  fetch('/Auth/verify-token', {
    method: 'GET', // or 'POST' if your route is set up to handle POST
    credentials: 'include' // IMPORTANT: ensures cookies are sent with the request
  })
    .then(res => {
      if (!res.ok) throw new Error('Unauthorized');
      return res.json();
    })
    .then(data => {
      const department = data.department;
      if (department !== 'Teaching') {
        alert('You are not authorized to access this page.');
        window.location.href = '/Staff/login';
      }
    });
} catch (err) {
  console.error('Token verification error:', err);
  alert('Session expired. Please log in again.');
  window.location.href = '/Staff/login';
}

      logoutBtn.addEventListener('click', async function () {
        try {
          const res = await fetch('/Staff/logout', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${token}`
            }
          });

          if (res.ok) {
            localStorage.removeItem('token');
            // localStorage.removeItem('user');
            alert('Logged out successfully!');
            window.location.href = '/Staff/login';
          } else {
            alert('Logout failed.');
          }
        } catch (err) {
          console.error('Logout error:', err);
          alert('Something went wrong during logout.');
        }
      });
    };
  </script>

  <script>
    window.addEventListener("DOMContentLoaded", async () => {
    const token = localStorage.getItem("token");

    if (!token) return;

    try {
      const res = await fetch('/Staff/Teaching/update-profile', {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (!res.ok) throw new Error("Failed to fetch user profile");

      const user = await res.json();

      document.getElementById("welcomeText").textContent = `Welcome, ${user.name || "Teacher"}`;
      document.getElementById("teacherName").textContent = user.username || "--";
      document.getElementById("teacherDept").textContent = user.department || "--";
      document.getElementById("teacherClassAssigned").textContent = (user.classAssigned || []).join(', ') || "--";
      document.getElementById("teacherDesignation").textContent = user.designation || "--";

    } catch (err) {
      console.error("Failed to fetch user info:", err);
      alert("Could not load user data. Please log in again.");
      window.location.href = '/Staff/login';
    }
  });
</script>

<script>
  document.getElementById('changePasswordBtn').addEventListener('click', () => {
    window.location.href = '/Staff/change-password';
  });
</script>
</body>
</html>
