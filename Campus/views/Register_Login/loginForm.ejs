<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Login</title>
  
  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Droid+Serif:wght@400;700&display=swap" rel="stylesheet">
  
  <!-- Font Awesome (CSP-safe) -->
  <link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
  
  <script src="https://accounts.google.com/gsi/client" async defer></script>

  <style>

    #errorPopupContainer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    background: rgba(0, 0, 0, 0.4);
    font-family: 'Montserrat', sans-serif;
  }

  #errorPopupContainer * {
    box-sizing: border-box;
    font-family: inherit;
    margin: 0;
    padding: 0;
  }

  #errorPopupBox {
    max-width: 400px;
    width: 90%;
    padding: 30px;
    border-radius: 10px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(6px);
    border: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    text-align: center;
  }

  #errorPopupBox h1 {
    font-size: 3rem;
    font-weight: 700;
    color: #e74c3c;
  }

  #errorPopupBox h2 {
    font-size: 1.5rem;
    font-weight: 700;
    color: #333;
    margin: 10px 0;
  }

  #errorMessage {
    font-size: 1rem;
    color: #666;
    background-color: #ffffff;
    padding: 15px;
    border-radius: 5px;
    margin: 20px 0;
    border-left: 4px solid #e74c3c;
    text-align: left;
    word-wrap: break-word;
  }

  #closeErrorPopup {
    display: inline-block;
    margin-top: 10px;
    padding: 10px 24px;
    background-color: #3498db;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    font-weight: bold;
    transition: background-color 0.3s ease, transform 0.2s ease;
    cursor: pointer;
  }

  #closeErrorPopup:hover {
    background-color: #2980b9;
    transform: translateY(-2px);
  }

    #flashMessageContainer {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9998;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 420px;
    padding: 0 1rem;
    pointer-events: none;
  }

  .flash-message {
    padding: 1rem 1.25rem;
    margin-bottom: 0.75rem;
    border-radius: 8px;
    font-weight: 600;
    width: 100%;
    text-align: center;
    pointer-events: all;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    animation: fadeIn 0.4s ease;
  }

  .flash-success {
    background-color: #d1fae5;
    color: #065f46;
    border: 1px solid #10b981;
  }

  .flash-error {
    background-color: #fee2e2;
    color: #991b1b;
    border: 1px solid #ef4444;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }


    * { box-sizing: border-box; }

    body {
      font-family: 'Droid Serif', serif;
      background-color: #fef7ed;
      margin: 0;
      padding: 1rem;
      color: #333;
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .container {
      width: 100%;
      max-width: 420px;
      background: #ffffff;
      padding: 2.5rem;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      border-top: 5px solid #1e40af;
    }

    .header-with-button {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .home-icon-btn {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 36px;
      height: 36px;
      background-color: #1e40af;
      color: #fff;
      border-radius: 6px;
      text-decoration: none;
      font-size: 1.1rem;
      transition: background-color 0.3s ease;
    }

    .home-icon-btn:hover {
      background-color: #172554;
    }

    h2 {
      color: #1e40af;
      font-family: 'Inter', sans-serif;
      font-size: 1.75rem;
      margin: 0;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1.25rem;
    }

    .form-group {
      display: flex;
      flex-direction: column;
    }

    label {
      margin-bottom: 0.5rem;
      font-weight: 600;
      color: #4b5563;
      font-size: 0.9rem;
    }

    input {
      padding: 0.75rem 1rem;
      font-size: 1rem;
      font-family: 'Droid Serif', serif;
      border: 1px solid #d1d5db;
      border-radius: 8px;
      transition: border-color 0.3s, box-shadow 0.3s;
    }

    input:focus {
      outline: none;
      border-color: #f97316;
      box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.2);
    }

    button[type="submit"] {
      background-color: #1e40af;
      color: white;
      padding: 0.8rem;
      border: none;
      border-radius: 8px;
      font-size: 1.1rem;
      font-weight: 600;
      font-family: 'Inter', sans-serif;
      cursor: pointer;
      transition: background-color 0.3s ease;
      margin-top: 1rem;
    }

    button[type="submit"]:hover {
      background-color: #1c3d90;
    }

    .form-footer {
      text-align: center;
      margin-top: 1.5rem;
      font-size: 0.95rem;
    }

    .forgot-password {
      text-align: right;
      margin-top: 0.5rem;
      font-size: 0.9rem;
    }

    .form-footer a, .forgot-password a {
      color: #1e40af;
      text-decoration: none;
      font-weight: 600;
    }

    .form-footer a:hover, .forgot-password a:hover {
      text-decoration: underline;
    }

    .google-wrapper {
      margin-top: 1.5rem;
    }
    .google-login-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    width: 100%;
    padding: 0.75rem 1rem;
    background-color: #ffffff;
    color: #1a73e8;
    border: 2px solid #1a73e8;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    font-family: 'Inter', sans-serif;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .google-login-btn:hover {
    background-color: #1a73e8;
    color: #ffffff;
  }

    @media (max-width: 500px) {
      body {
        padding: 0;
      }

      .container {
        margin: 0;
        border-radius: 0;
        min-height: 100vh;
        box-shadow: none;
        padding: 2rem 1.5rem;
      }

      h2 {
        font-size: 1.5rem;
      }
    }
  </style>
</head>
<body>
<div id="flashMessageContainer" style="position: fixed; top: 20px; left: 50%; transform: translateX(-50%); z-index: 9999;"></div>

<div class="container">
  <div class="header-with-button">
    <a href="/" class="home-icon-btn" title="Go Home">
      <i class="fas fa-home"></i>
    </a>
    <h2>Login to Campus</h2>
  </div>

  <form id="loginForm">
    <div class="form-group">
      <label for="identifier">Email *</label>
      <input type="email" id="identifier" name="identifier" required placeholder="Enter your email" />
    </div>
    <div class="form-group">
      <label for="password">Password *</label>
      <input type="password" id="password" name="password" required placeholder="Enter your password" />
      <div class="forgot-password">
        <a href="/Staff/forgot-password">Forgot Password?</a>
      </div>
    </div>
    <button type="submit">Login</button>
  </form>

  <div class="google-wrapper">
  <button id="googleLoginBtn" type="button" class="google-login-btn">
    <i class="fab fa-google" style="margin-right: 10px;"></i> Continue with Google
  </button>
</div>

  <div class="form-footer">
    Don't have an account? <a href="/Staff/register">Register here</a>
  </div>
</div>

<script>
  const loginForm = document.getElementById('loginForm');

  loginForm.addEventListener('submit', async function (e) {
    e.preventDefault();
    const identifier = document.getElementById('identifier').value.trim();
    const password = document.getElementById('password').value.trim();

    try {
      const ip = await getClientIP();
      const userAgent = navigator.userAgent;

      const res = await fetch('/Staff/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-forwarded-for': ip,
          'user-agent': userAgent
        },
        body: JSON.stringify({ identifier, password })
      });

      if (!res.ok) {
        await handleServerError(res);
        return;
      }

      const data = await res.json();

      if (data.token) {
        const payload = decodeJWT(data.token);

        if (!payload) {
          showFlashMessage('error', 'Invalid token received.');
          return;
        }

        const isAuthorizedUser = checkAuthorization(payload);

        if (isAuthorizedUser) {
          localStorage.setItem('token', data.token);
          showFlashMessage('success', 'Login successful! Redirecting...');
          setTimeout(() => redirectToDashboard(payload), 1500);
        } else {
          showFlashMessage('error', 'You are not authorized to access this page.');
        }
      } else {
        showFlashMessage('error', data.message || 'Login failed.');
      }
    } catch (err) {
      console.error('Error during login:', err);
      showFlashMessage('error', 'An error occurred. Please try again.');
    }
  });

 
let googleClient;

  function initializeGoogleClient() {
    if (window.google && !googleClient) {
      googleClient = google.accounts.oauth2.initTokenClient({
        client_id: '386508050197-iluerjae4ua3i4jgd4k4taio51mav3bt.apps.googleusercontent.com',
        scope: 'openid email profile',
        callback: async (response) => {
          if (!response.access_token) {
            // alert('Google login failed. No token received.');
            showFlashMessage('error', 'Google login failed. No token received.');
            return;
          }

          try {
            const ip = await getClientIP();
            const userAgent = navigator.userAgent;
            const res = await fetch('/Staff/google-login', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json', 'x-forwarded-for': ip, 'user-agent': userAgent },
              body: JSON.stringify({ tokenId: response.access_token }) // Matches backend key
            });

           if (!res.ok) {
            await handleServerError(res);
            return;
            }

            const data = await res.json();

            if (data.token) {
              localStorage.setItem('token', data.token);
              const payload = decodeJWT(data.token)
              // alert('Login successful!');
              showFlashMessage('success', 'Login successful! Redirecting...');
              setTimeout(() =>  redirectToDashboard(payload), 1500);
              // window.location.href = '/Staff/dashboard';
            } else {
              // alert(data.message || 'Login failed.');
              showFlashMessage('error', 'Login failed!!');
              setTimeout(() => window.location.href = '/Staff/login', 1500);
              // window.location.href = '/Staff/login';
            }

          } catch (err) {
            console.error('Google Auth Error:', err);
            // alert('Google sign-in failed. Try again.');
            showFlashMessage('error','Google Auth Error');
          }
        }
      });
    }
  }

  // Poll until google.accounts is available
  function waitForGoogle() {
    const interval = setInterval(() => {
      if (window.google && window.google.accounts) {
        clearInterval(interval);
        initializeGoogleClient();
      }
    }, 100);
  }

  document.addEventListener('DOMContentLoaded', () => {
    waitForGoogle();

    const loginButton = document.getElementById('googleLoginBtn');
    if (loginButton) {
      loginButton.addEventListener('click', () => {
        if (googleClient) {
          googleClient.requestAccessToken();
        } else {
          // alert('Google client not initialized yet. Please wait...');
          showFlashMessage('error', 'Google client not initialized yet. Please wait...');
        }
      });
    }
  });

  function handleGoogleLogin() {
    if (googleClient) {
      googleClient.requestCode();
    } else {
      // alert("Google client not initialized yet.");
      showFlashMessage('error', 'Google client not initialized yet.');
    }
  }

  function decodeJWT(token) {
    try {
      const payload = JSON.parse(atob(token.split('.')[1]));
      return payload;
    } catch (err) {
      console.error('Token decode failed:', err);
      return null;
    }
  }

  function checkAuthorization(payload) {
    if (payload.role) {
      return payload.isActive === true;
    } else if (payload.department) {
      return payload.isAuthorized === true;
    }
    return false;
  }

  function redirectToDashboard(payload) {
    if (payload.role === 'Admin' || payload.role === 'Super Admin') {
      window.location.href = '/Admin/dashboard';
    } else if (payload.department) {
      window.location.href = '/Staff/dashboard';
    } else {
      window.location.href = '/Staff/login';
    }
  }

  function showFlashMessage(type, message, duration = 4000) {
    const container = document.getElementById('flashMessageContainer');
    const msg = document.createElement('div');
    msg.classList.add('flash-message');
    msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
    msg.textContent = message;

    container.appendChild(msg);

    setTimeout(() => {
      msg.style.opacity = '0';
      msg.style.transform = 'translateY(-10px)';
      setTimeout(() => msg.remove(), 500);
    }, duration);
  }

  async function getClientIP() {
    const res = await fetch('https://api.ipify.org?format=json');
    const data = await res.json();
    return data.ip;
  }

  async function handleServerError(res) {
    const contentType = res.headers.get('Content-Type') || '';

    if (contentType.includes('text/html')) {
      const html = await res.text();
      const tempDiv = document.createElement('div');
      tempDiv.innerHTML = html;

      const popup = tempDiv.querySelector('#errorPopupContainer');
      const scripts = tempDiv.querySelectorAll('script');

      if (popup) {
        document.body.prepend(popup);
        scripts.forEach((script) => {
          const newScript = document.createElement('script');
          if (script.src) newScript.src = script.src;
          else newScript.textContent = script.textContent;
          document.body.appendChild(newScript);
        });
      } else {
        showFlashMessage('error', 'An unknown error occurred.');
      }
    } else {
      showFlashMessage('error', 'Server error: unexpected content type.');
    }
  }
</script>


 <script src="https://accounts.google.com/gsi/client" async defer></script>


</body>
</html>
