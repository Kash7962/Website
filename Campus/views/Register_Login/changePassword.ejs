<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Change Password</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        /* --- STYLES FOR CONSISTENT LOOK AND FEEL --- */
        
        /* Popups and Flash Messages */
          #errorPopupContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            background: rgba(0, 0, 0, 0.4);
            font-family: 'Montserrat', sans-serif;
        }

        #errorPopupContainer * {
            box-sizing: border-box;
            font-family: inherit;
            margin: 0;
            padding: 0;
        }

        #errorPopupBox {
            max-width: 400px;
            width: 90%;
            padding: 30px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0, 0, 0, 0.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        #errorPopupBox h1 {
            font-size: 3rem;
            font-weight: 700;
            color: #e74c3c;
        }

        #errorPopupBox h2 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 10px 0;
        }

        #errorMessage {
            font-size: 1rem;
            color: #666;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            border-left: 4px solid #e74c3c;
            text-align: left;
            word-wrap: break-word;
        }

        #closeErrorPopup {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 24px;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.3s ease, transform 0.2s ease;
            cursor: pointer;
        }

        #closeErrorPopup:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
        }
        
         #flashMessageContainer {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 9998;
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 420px;
            padding: 0 1rem;
            pointer-events: none;
        }

        .flash-message {
            padding: 1rem 1.25rem;
            margin-bottom: 0.75rem;
            border-radius: 8px;
            font-weight: 600;
            width: 100%;
            text-align: center;
            pointer-events: all;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: fadeIn 0.4s ease;
        }

        .flash-success {
            background-color: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
        }

        .flash-error {
            background-color: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        /* Main Page Styles */
        * {
            box-sizing: border-box; margin: 0; padding: 0;
        }
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #fef7ed;
            margin: 0; padding: 1rem; color: #333; min-height: 100vh;
            display: flex; justify-content: center; align-items: center;
        }
        .container {
            width: 100%; max-width: 420px; background: #ffffff;
            padding: 2.5rem; border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border-top: 5px solid #1e40af; /* Blue accent */
        }
        h2 {
            text-align: center; color: #1e40af; margin-bottom: 2rem;
            font-family: 'Inter', sans-serif; font-size: 1.75rem;
        }
        .form-group { margin-bottom: 1.25rem; }
        label {
            display: block;
            margin-bottom: 0.5rem; font-weight: 600;
            color: #4b5563; font-size: 0.9rem;
        }
        input {
            width: 100%;
            padding: 0.75rem 1rem; font-size: 1rem;
            font-family: 'Poppins', sans-serif;
            border: 1px solid #d1d5db; border-radius: 8px;
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        input:focus {
            outline: none; border-color: #f97316;
            box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.2);
        }
        button {
            width: 100%;
            background-color: #1e40af; color: white;
            padding: 0.8rem; border: none; border-radius: 8px;
            font-size: 1.1rem; font-weight: 600;
            font-family: 'Inter', sans-serif; cursor: pointer;
            transition: background-color 0.3s ease; margin-top: 1rem;
        }
        button:hover { background-color: #1c3d90; }
        
        @media (max-width: 500px) {
            body { padding: 0; }
            .container {
                margin: 0; border-radius: 0; min-height: 100vh;
                box-shadow: none; padding: 2rem 1.5rem;
            }
            h2 { font-size: 1.5rem; }
        }
    </style>
</head>
<body>
    <div id="flashMessageContainer"></div>
    <div class="container">
        <h2>Change Password</h2>
        <form id="changePasswordForm">
            <div class="form-group">
                <label for="currentPassword">Current Password</label>
                <input type="password" id="currentPassword" placeholder="Enter your current password" required />
            </div>
            <div class="form-group">
                <label for="newPassword">New Password</label>
                <input type="password" id="newPassword" placeholder="Enter a new, strong password" required />
            </div>
            <button type="submit" id="submitChange">Change Password</button>
        </form>
    </div>

    <script>
        // Your original JavaScript logic is preserved below
        function parseJwt(token) {
            try {
                return JSON.parse(atob(token.split('.')[1]));
            } catch (e) {
                return null;
            }
        }

        const changePasswordForm = document.getElementById('changePasswordForm');
        
        changePasswordForm.addEventListener('submit', async (e) => {
            e.preventDefault(); // Prevent default form submission

            const currentPassword = document.getElementById('currentPassword').value.trim();
            const newPassword = document.getElementById('newPassword').value.trim();
            const token = localStorage.getItem('token');

            if (!token || !currentPassword || !newPassword) {
                return showFlashMessage('error', 'All fields are required and you must be logged in.');
            }

            const decoded = parseJwt(token);
            const _id = decoded?._id;
            const role = decoded?.role;
            const department = decoded?.department;

            if (!_id) return showFlashMessage('error', 'Invalid or corrupted token.');

            const userData = { _id, currentPassword, newPassword };
            if (role) userData.role = role;
            if (department) userData.department = department;
            
            try {
                const res = await fetch('/Staff/change-password', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                        Authorization: `Bearer ${token}`
                    },
                    body: JSON.stringify(userData)
                });

                if (!res.ok) {
                    return handleServerError(res);
                }
                const data = await res.json();
                showFlashMessage('success', data.message || 'Password changed successfully.');
                setTimeout(() => window.location.reload(), 1500);
                // window.location.href = '/Staff' (or wherever you want to redirect after successful password change

            } catch (err) {
                console.error(err);
                showFlashMessage('error', 'Error updating password.');
            }
        });

        function showFlashMessage(type, message, duration = 4000) {
            const container = document.getElementById('flashMessageContainer');
            const msg = document.createElement('div');
            msg.classList.add('flash-message');
            msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
            msg.textContent = message;
            container.appendChild(msg);
            setTimeout(() => {
                msg.style.opacity = '0';
                msg.style.transform = 'translateY(-10px)';
                setTimeout(() => msg.remove(), 500);
            }, duration);
        }

         async function handleServerError(res) {
            const contentType = res.headers.get('Content-Type') || '';

            if (contentType.includes('text/html')) {
            const html = await res.text();
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = html;

            const popup = tempDiv.querySelector('#errorPopupContainer');
            const scripts = tempDiv.querySelectorAll('script');

            if (popup) {
                document.body.prepend(popup);
                scripts.forEach((script) => {
                const newScript = document.createElement('script');
                if (script.src) newScript.src = script.src;
                else newScript.textContent = script.textContent;
                document.body.appendChild(newScript);
                });
            } else {
                showFlashMessage('error', 'An unknown error occurred.');
            }
            } else {
            showFlashMessage('error', 'Server error: unexpected content type.');
            }
        }
    </script>
</body>
</html>