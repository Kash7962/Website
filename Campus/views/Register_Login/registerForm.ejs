<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>User Registration</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Droid+Serif:wght@400;700&display=swap" rel="stylesheet">
  <style>

    #errorPopupContainer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    background: rgba(0, 0, 0, 0.4);
    font-family: 'Montserrat', sans-serif;
  }

  #errorPopupContainer * {
    box-sizing: border-box;
    font-family: inherit;
    margin: 0;
    padding: 0;
  }

  #errorPopupBox {
    max-width: 400px;
    width: 90%;
    padding: 30px;
    border-radius: 10px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(6px);
    border: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    text-align: center;
  }

  #errorPopupBox h1 {
    font-size: 3rem;
    font-weight: 700;
    color: #e74c3c;
  }

  #errorPopupBox h2 {
    font-size: 1.5rem;
    font-weight: 700;
    color: #333;
    margin: 10px 0;
  }

  #errorMessage {
    font-size: 1rem;
    color: #666;
    background-color: #ffffff;
    padding: 15px;
    border-radius: 5px;
    margin: 20px 0;
    border-left: 4px solid #e74c3c;
    text-align: left;
    word-wrap: break-word;
  }

  #closeErrorPopup {
    display: inline-block;
    margin-top: 10px;
    padding: 10px 24px;
    background-color: #3498db;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    font-weight: bold;
    transition: background-color 0.3s ease, transform 0.2s ease;
    cursor: pointer;
  }

  #closeErrorPopup:hover {
    background-color: #2980b9;
    transform: translateY(-2px);
  }

   #flashMessageContainer {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9998;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 420px;
    padding: 0 1rem;
    pointer-events: none;
  }

  .flash-message {
    padding: 1rem 1.25rem;
    margin-bottom: 0.75rem;
    border-radius: 8px;
    font-weight: 600;
    width: 100%;
    text-align: center;
    pointer-events: all;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    animation: fadeIn 0.4s ease;
  }

  .flash-success {
    background-color: #d1fae5;
    color: #065f46;
    border: 1px solid #10b981;
  }

  .flash-error {
    background-color: #fee2e2;
    color: #991b1b;
    border: 1px solid #ef4444;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }

    * { box-sizing: border-box; }

    body {
      font-family: 'Droid Serif', serif;
      background-color: #fef7ed;
      margin: 0;
      padding: 1rem;
      color: #333;
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .container {
      width: 100%;
      max-width: 420px;
      background: #ffffff;
      padding: 2.5rem;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      border-top: 5px solid #f97316;
      position: relative;
    }

    .icon-buttons {
      position: absolute;
      top: 15px;
      left: 15px;
      display: flex;
      gap: 0.5rem;
    }

    .icon-buttons a {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 36px;
      height: 36px;
      background-color: #1e40af;
      color: #fff;
      border-radius: 6px;
      text-decoration: none;
      font-size: 1rem;
      transition: background-color 0.3s ease;
    }

    .icon-buttons a:hover {
      background-color: #172554;
    }

    h2 {
      text-align: center;
      color: #1e40af;
      margin-bottom: 2rem;
      font-family: 'Inter', sans-serif;
      font-size: 1.75rem;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1.25rem;
    }

    .form-group {
      display: flex;
      flex-direction: column;
    }

    label {
      margin-bottom: 0.5rem;
      font-weight: 600;
      color: #4b5563;
      font-size: 0.9rem;
    }

    select,
    input[type="text"],
    input[type="email"],
    input[type="password"],
    input[type="tel"] {
      padding: 0.75rem 1rem;
      font-size: 1rem;
      border: 1px solid #d1d5db;
      border-radius: 8px;
      transition: border-color 0.3s, box-shadow 0.3s;
    }

    input:focus, select:focus {
      outline: none;
      border-color: #f97316;
      box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.2);
    }

    .phone-group {
      display: flex;
      gap: 0.5rem;
    }

    .phone-group select {
      flex: 0 0 120px;
    }

    button[type="submit"] {
      background-color: #f97316;
      color: white;
      padding: 0.8rem;
      border: none;
      border-radius: 8px;
      font-size: 1.1rem;
      font-weight: 600;
      font-family: 'Inter', sans-serif;
      cursor: pointer;
      transition: background-color 0.3s ease;
      margin-top: 1rem;
    }

    button[type="submit"]:hover {
      background-color: #ea580c;
    }

    .form-footer {
      text-align: center;
      margin-top: 1.5rem;
      font-size: 0.95rem;
    }

    .form-footer a {
      color: #1e40af;
      text-decoration: none;
      font-weight: 600;
    }

    .form-footer a:hover {
      text-decoration: underline;
    }

    @media (max-width: 500px) {
      body {
        padding: 0;
      }
      .container {
        margin: 0;
        border-radius: 0;
        min-height: 100vh;
        box-shadow: none;
        padding: 2rem 1.5rem;
      }
      h2 {
        font-size: 1.5rem;
      }
    }
  </style>
</head>
<body>
<div id="flashMessageContainer" style="position: fixed; top: 20px; left: 50%; transform: translateX(-50%); z-index: 9999;"></div>
<div class="container">
  <!-- Icon buttons -->
  <div class="icon-buttons">
    <a href="/" title="Home"><i class="fas fa-home"></i></a>
  </div>

  <h2>Create Your Account</h2>

  <form id="registerForm">
    <div class="form-group">
      <label for="name">Full Name *</label>
      <input type="text" id="name" name="name" required placeholder="Enter your full name">
    </div>

    <div class="form-group">
      <label for="email">Email *</label>
      <input type="email" id="email" name="email" required placeholder="Enter your email">
    </div>

    <div class="form-group">
      <label for="phone">Mobile Number *</label>
      <div class="phone-group">
        <select id="countryCode" name="countryCode" required>
          <option value="+91" selected>ðŸ‡®ðŸ‡³ +91</option>
          <option value="+1">ðŸ‡ºðŸ‡¸ +1</option>
          <option value="+44">ðŸ‡¬ðŸ‡§ +44</option>
        </select>
        <input type="tel" id="phone" required placeholder="10-digit number" pattern="[0-9]{10}">
      </div>
    </div>

    <div class="form-group">
      <label for="department">Department *</label>
      <select id="department" name="department" required>
        <option value="" disabled selected>Select your department</option>
        <option value="Academic">Academic</option>
        <option value="Residential">Residential</option>
        <option value="Kitchen">Kitchen</option>
        <option value="Library">Library</option>
        <option value="Sports">Sports</option>
      </select>
    </div>

    <div class="form-group">
      <label for="password">Password *</label>
      <input type="password" id="password" name="password" required placeholder="Enter password">
    </div>

    <div class="form-group">
      <label for="confirmPassword">Confirm Password *</label>
      <input type="password" id="confirmPassword" name="confirmPassword" required placeholder="Confirm password">
    </div>

    <button type="submit">Sign Up</button>
  </form>

  <div class="form-footer">
    Already have an account? <a href="/Staff/login">Log in</a>
  </div>
</div>

<script>
  const form = document.getElementById('registerForm');
  const rawPhone = document.getElementById('phone');
  const countryCode = document.getElementById('countryCode');

  form.addEventListener('submit', async function (e) {
    e.preventDefault();

    const fullPhone = countryCode.value + rawPhone.value.replace(/\D/g, '');
    const password = document.getElementById('password').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    if (rawPhone.value.length !== 10) {
      // alert("Phone number must be 10 digits.");
      showFlashMessage('error', 'Phone number must be 10 digits.');
      return;
    }

    if (password !== confirmPassword) {
      // alert("Passwords do not match.");
      showFlashMessage('error', 'Passwords do not match.');
      return;
    }

    const data = {
      name: document.getElementById('name').value,  // input id is still 'username'
      email: document.getElementById('email').value,
      phone: fullPhone,
      department: document.getElementById('department').value,
      password
    };

    try {
      const response = await fetch("/Staff/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data)
      });

        if (!response.ok) {
        const contentType = res.headers.get('Content-Type') || '';

        if (contentType.includes('text/html')) {
          const html = await res.text();
          const tempDiv = document.createElement('div');
          tempDiv.innerHTML = html;

          const popup = tempDiv.querySelector('#errorPopupContainer');
          const scripts = tempDiv.querySelectorAll('script');

          if (popup) {
            document.body.prepend(popup);

            // Re-execute any inline scripts inside the error page
            scripts.forEach((script) => {
              const newScript = document.createElement('script');
              if (script.src) {
                newScript.src = script.src;
              } else {
                newScript.textContent = script.textContent;
              }
              document.body.appendChild(newScript);
            });
          } else {
            // alert('An unknown error occurred.');
            showFlashMessage('error', 'An unknown error occured.');
          }

          return;
        }

        // alert('Server error: unexpected content type.');
        showFlashMessage('error', 'Server error: unexpected content type.');
      }


      const contentType = response.headers.get("content-type");

      if (response.ok) {
        // Successful registration
        // alert("Registration successful! Please wait for admin authorization to log in.");
        showFlashMessage('success', 'Registration successful! Please wait for admin authorization to log in.');
        // window.location.href = "/Staff/login";
        setTimeout(() => window.location.href = '/Staff/login', 1500);
      } else if (contentType && contentType.includes("application/json")) {
        // JSON error (e.g., duplicate email/phone)
        const result = await response.json();
        // alert(result.message || "Registration failed. Please try again.");
        showFlashMessage('error', 'Registration failed. Please try again.');
      } else {
        // HTML error rendered from server (e.g., res.render('error'))
        const html = await response.text();
        document.open();
        document.write(html);
        document.close();
      }

    } catch (err) {
      console.error("Fetch error:", err);
    }
  });

  function showFlashMessage(type, message, duration = 4000) {
    const container = document.getElementById('flashMessageContainer');
    const msg = document.createElement('div');
    msg.classList.add('flash-message');
    msg.classList.add(type === 'success' ? 'flash-success' : 'flash-error');
    msg.textContent = message;

    container.appendChild(msg);

    setTimeout(() => {
      msg.style.opacity = '0';
      msg.style.transform = 'translateY(-10px)';
      setTimeout(() => msg.remove(), 500);
    }, duration);
    }
    async function getClientIP() {
    const res = await fetch('https://api.ipify.org?format=json');
    const data = await res.json();
    return data.ip;
  }

</script>


</body>
</html>